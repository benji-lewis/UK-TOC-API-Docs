{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "RetailHub API version: 1.24.8.0"
  },
  "host": "api.gwr.com",
  "schemes": [
    "http"
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login endpoint.",
        "description": "\u003Cpara\u003EThis endpoint requires recaptcha validation token. Optional Session Token can be passed.\u003C/para\u003E",
        "operationId": "Authentication_Login",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.OptionalAuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Login.LoginRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Login.LoginResponse]"
            }
          }
        }
      }
    },
    "/logoff": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logoff endpoint.",
        "description": "\u003Cpara\u003ELog off from WL session\u003C/para\u003E",
        "operationId": "Authentication_Logoff",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "New user register endpoint.",
        "description": "\u003Cpara\u003EThis endpoint requires recaptcha validation token. Optional Session Token can be passed.\u003C/para\u003E",
        "operationId": "Authentication_Register",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.OptionalAuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Registration.RegistrationRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Registration.RegistrationResponse]"
            }
          }
        }
      }
    },
    "/sendpasswordrecoveryemail": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Endpoint for sending password recovery email.",
        "description": "\u003Cpara\u003EThis endpoint requires recaptcha validation token. NO Session Token required.\u003C/para\u003E",
        "operationId": "Authentication_SendPasswordRecoveryEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.OptionalAuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Password.PasswordRecoveryRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/resetpassword": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password endpoint.",
        "description": "\u003Cpara\u003EIt is a follow on operation required after sendpasswordrecoveryemail. This endpoint requires recaptcha validation token. NO Session Token required.\u003C/para\u003E",
        "operationId": "Authentication_ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Password.ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.StatusResult"
            }
          }
        }
      }
    },
    "/changepassword": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change password endpoint. Requires Logged in User.",
        "operationId": "Authentication_ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Password.ChangePasswordRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.StatusResult"
            }
          }
        }
      }
    },
    "/handoff": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Basket handoff endpoint.",
        "description": "\u003Cpara\u003EThis endpoint is used to handoff basket from MixingDeck to BookingFlow. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Authentication_Handoff",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.MixingDeckParameters]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.HandoffResponse"
            }
          }
        }
      }
    },
    "/booking/purchases": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Used to obtain list of purchases.",
        "description": "\u003Cpara\u003EList that can be filtered by dates, fulfilment or product type. By default all types of purchases are returned.  Requires Logged in User.\u003C/para\u003E",
        "operationId": "Booking_GetPurchases",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.fromdate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.todate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.fulfilmentmethodtype",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TicketOnDeparture",
              "LocalTicketOnDeparture",
              "Post",
              "Mobile",
              "ETicket",
              "PrintAtHome",
              "RemoteSmartCard",
              "External",
              "Smartcard",
              "TransitHub",
              "All",
              "Unknown",
              "Direct"
            ]
          },
          {
            "name": "request.data.producttype",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Ticket",
              "Season",
              "Rover",
              "GoldRecordCard",
              "FlexiSeason",
              "NotImplemented",
              "All"
            ]
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Bookings.Purchase]]"
            }
          }
        }
      }
    },
    "/booking/seasonpurchases": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Used to obtain list of season ticket purchases.",
        "description": "\u003Cpara\u003EList that can be filtered by dates, fulfilment or product type. By default all types of purchases are returned. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Booking_GetSeasonPurchases",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.fromdate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.todate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.fulfilmentmethodtype",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TicketOnDeparture",
              "LocalTicketOnDeparture",
              "Post",
              "Mobile",
              "ETicket",
              "PrintAtHome",
              "RemoteSmartCard",
              "External",
              "Smartcard",
              "TransitHub",
              "All",
              "Unknown",
              "Direct"
            ]
          },
          {
            "name": "request.data.producttype",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Ticket",
              "Season",
              "Rover",
              "GoldRecordCard",
              "FlexiSeason",
              "NotImplemented",
              "All"
            ]
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Bookings.Purchase]]"
            }
          }
        }
      }
    },
    "/booking/seasonticket/expiring": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "This endpoint returns expiring season tickets purchases. Requires Logged in User.",
        "operationId": "Booking_GetExpiringSeasonTicket",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.Purchase]"
            }
          }
        }
      }
    },
    "/booking/renewseasonticket": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "This endpoint renews the season ticket.",
        "description": "\u003Cpara\u003EAccepts TripId and Booking Reference Number. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Booking_RenewSeasonTicket",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.SearchParameter]"
            }
          }
        }
      }
    },
    "/booking/purchase": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Used to obtain specific purchase based on Booking Reference Number. Requires Logged in User.",
        "operationId": "Booking_GetPurchaseDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.PurchaseDetails]"
            }
          }
        }
      }
    },
    "/booking/purchasedetails": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Used to obtain trips details.",
        "description": "\u003Cpara\u003EUsed to retreive trip's details with all necessary related data. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Booking_GetPurchaseDetailsWithAmendedDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.PurchaseTripDetails]"
            }
          }
        }
      }
    },
    "/booking/upcoming": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Used to obtain Upcoming purchase/trip.",
        "description": "\u003Cpara\u003EUsed to present single upcoming journey. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Booking_GetUpcomingTrip",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.UpcomingTrip]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/booking/initialbookingsdata": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Used to obtain Initial purchase/trip along with indicator is customer has bookings that qualifies for delay repay.",
        "description": "\u003Cpara\u003EUsed to show single upcoming journey with indicator is customer has bookings that qualifies for delay repay. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Booking_GetCustomerInitialBookingsData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.CustomerInitialBookingsData]"
            }
          }
        }
      }
    },
    "/booking/basket": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "This endpoint returns summary data for basket.",
        "description": "\u003Cpara\u003EReturned response contains only basket state, total cost of a basket and number of items currently in the basket. Requires valid session. Optionally Logged in User.\u003C/para\u003E",
        "operationId": "Booking_GetBasketSummary",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Basket.BasketSummary]"
            }
          }
        }
      }
    },
    "/booking/aftersalestasks": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Returns list of actions that can be taken with given reservation after purchase.",
        "description": "\u003Cpara\u003EThings like possibility to amend, cancel, refunds or other tasks. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Booking_GetTicketDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTasks]"
            }
          }
        }
      }
    },
    "/booking/ticketdetails": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Returns list of aftersales ticket details. Requires Logged in User.",
        "operationId": "Booking_GetTicketDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.aftersalesmode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.TicketDetails]"
            }
          }
        }
      }
    },
    "/booking/lowestlatestavailability": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Returns Lowest possible availability of a delivery options.",
        "operationId": "Booking_LowestLatestAvailability",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.LatestAvailability]"
            }
          }
        }
      }
    },
    "/booking/refundamount": {
      "post": {
        "tags": [
          "Booking"
        ],
        "summary": "Obtains proper refund amount for the given refunding booking. Requires Logged in User.",
        "operationId": "Booking_GetRefundAmountDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.ticketstorefund",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.RefundAmountDetails]"
            }
          }
        }
      }
    },
    "/booking/refund": {
      "post": {
        "tags": [
          "Booking"
        ],
        "summary": "Performs a refund of a booking.",
        "description": "\u003Cpara\u003EIt is possible to make partial refund if there are more than one trips in the booking. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Booking_GetRefund",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.RefundResultCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.RefundResult]"
            }
          }
        }
      }
    },
    "/booking/amendjourney": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Endpoint performs a refund of a booking.",
        "description": "\u003Cpara\u003EIt is possible to make partial refund if there are more than one trips in the booking. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Booking_InitiateChangeOfJourney",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.additionalinformation",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.reasonid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.ticketstochange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.SearchParameter]"
            }
          }
        }
      }
    },
    "/booking/cancelamendjourney": {
      "delete": {
        "tags": [
          "Booking"
        ],
        "summary": "This endpoint cancels amend journey request. Requires Logged in User.",
        "operationId": "Booking_CancelChangeOfJourneyRequest",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/booking/getgiftcards": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "This endpoint returns all of the Purchases where trip is a gift voucher. Requires Logged in User.",
        "operationId": "Booking_GetGiftCards",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.fromdate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.todate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.fulfilmentmethodtype",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TicketOnDeparture",
              "LocalTicketOnDeparture",
              "Post",
              "Mobile",
              "ETicket",
              "PrintAtHome",
              "RemoteSmartCard",
              "External",
              "Smartcard",
              "TransitHub",
              "All",
              "Unknown",
              "Direct"
            ]
          },
          {
            "name": "request.data.producttype",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Ticket",
              "Season",
              "Rover",
              "GoldRecordCard",
              "FlexiSeason",
              "NotImplemented",
              "All"
            ]
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Bookings.Purchase]]"
            }
          }
        }
      }
    },
    "/customer/profile": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Endpoint used for retreiving user's profile.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_Profile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.CustomerProfile]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Endpoint used for saving user's profile.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.CustomerProfile]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/lookupaddress": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint resolves UK addresses for a given post code.",
        "description": "\u003Cpara\u003EAccepts post code and house number. NO Session Token required.\u003C/para\u003E",
        "operationId": "Customer_LookupAddress",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Request[Brunel.Integration.RetailHub.Dto.AddressLookupRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Address]]"
            }
          }
        }
      }
    },
    "/customer/address": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns customer address.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetCustomerAddresses",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Address]]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint updates already existing customer address.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_UpdateCustomerAddress",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Address]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint stores customer address.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_AddCustomerAddress",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Address]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint removes customer address",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_DeleteCustomerAddress",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Address]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/defaultaddress": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint sets the default customer address",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_SetDefaultDeliveryAddress",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Address]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/preferences": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns customer's preferences.",
        "description": "\u003Cpara\u003ESignup to newsletters, seat preferencess etc. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetPreferences",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Preferences.Preferences]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint updates customer's preferences.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_UpdatePreferences",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.Preferences]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/communicationpreferences": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns customer's communication preferences from Snowflake.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetCommunicationPreferences",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Preferences.CommunicationPreferences]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint updates customer's communication preferences in Snowflake.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_UpdateCommunicationPreferences",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.CommunicationPreferences]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/preferences/favouritejourney": {
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint updates customer's preferences.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_RemovePreferences",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.RemovePreferencesCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/preferences/seatpreferences": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns customer's seat preferences.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetSeatPreferences",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint sets customer's seat preferences.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_SetSeatPreferences",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/loyaltycard": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns customer's loyality card.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetLoyaltyCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyCard]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint adds customer's loyalty card.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_AddLoyaltyCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.LoyaltyCards.SetLoyaltyCardCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns customer's loyalty card.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_AddLoyaltyCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.LoyaltyCards.AddLoyaltyCardRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyPoint]]"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint removes customer's loyalty card.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_DeleteLoyaltyCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyCard]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/vouchers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns customer's vouchers.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetVouchers",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Voucher]]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint redeems customer's voucher during payment process.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_RedeemVoucher",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.RedeemVoucherCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.RedeemVoucherResponse]"
            }
          }
        }
      }
    },
    "/customer/photocard": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns customer's photo card.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetPhotoCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Preferences.PhotoCard]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint updates customer's photo card.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_UpdatePhotoCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.PhotoCard]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/savedsearches": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint retrieves customer's saved journeys.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetSavedJourneys",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Basket.SavedJourney]]"
            }
          }
        }
      }
    },
    "/customer/basket": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint gets customer's basket.",
        "description": "\u003Cpara\u003EOptional Session Token can be passed. If no Session token is passed basket is created for anonymous user which needs to be 'registered' later on in order to be able to purchase it.\u003C/para\u003E\r\n\u003Cpara\u003EAny pending reservations found in cookie will be deleted from the basket unless keepPendingReservation is set to true is used in querystring\u003C/para\u003E",
        "operationId": "Customer_GetBasket",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.keeppendingreservation",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Basket.GetBasketResponse]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint adds trip to customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_AddToBasket",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.AddToBasketCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.AddToBasketResponse]"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint removes trip from customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_RemoveFromBasket",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.RemoveFromBasketCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.RemoveFromBasketResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/handoff": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint hands off basket with the return URL query token.",
        "description": "\u003Cpara\u003EIt obtains a one-time token ID necessary to access the basket that is specific to the supplied clients resource id represented by their unique session. The handofftoken is used as a query string on the landing page URL to transfer users over to the WebTIS basket and purchase flow. Optionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_GetBasketHandoff",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.returnurlquerytoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.GetBasketHandoffResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/journey/addons": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint gets addons for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_GetAddons",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.tripno",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetAddonResponse]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint sets addons for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token\u003C/para\u003E",
        "operationId": "Customer_SetAddons",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetAddonCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetAddonResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/journey/travelcardpassengers": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint sets travelcard passengers for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_SetTravelCardPassengers",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetTravelCardPassengersCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetTravelCardPassengersResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/journey/reservation": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns made reservations for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_GetReservation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.tripno",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetReservationResponse]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint performs reservation of bikes, seats, sleepers and other things for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_MakeReservation",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.MakeReservationCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.MakeReservationResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/journey/sleeperreservation": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint updates sleeper reservation for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_UpdateSleeperReservation",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.UpdateSleeperReservationCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/basket/journey/sleepersupplements": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns sleeper supplements for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_GetSleeperSupplements",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.tripno",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperSupplementsResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/journey/sleeperberths": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns sleeper berths for the given timetable leg.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_GetSleeperBerths",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.GetSleeperBerthsCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperBerthsResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/journey/selfprintpassengers": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint sets the selfprint passengers for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_SetSelfPrintPassengers",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetSelfPrintPassengersCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetSelfPrintPassengersResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/journey/seatattributes": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint gets seat attributes for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_GetSeatAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.tripno",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSeatAttributesResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/deliveryoptions": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint gets applicable delivery options.",
        "description": "\u003Cpara\u003EIn case of missing, invalid or expired session token WL starts a new session.\u003C/para\u003E",
        "operationId": "Customer_GetApplicableDeliveryOptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.corporateid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Basket.GetApplicableDeliveryOptionsResponse]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint sets applicable delivery options for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_SetApplicableDeliveryOptions",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.SetApplicableDeliveryOptionsCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.SetApplicableDeliveryOptionsResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/deliveryoption/etickets": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint sets passenger details for the e-ticket delivery for the given trip in customer's basket.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_SetETicketPassengersDetails",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.DeliveryOptions.SetETicketPassengersDetailsRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.DeliveryOptions.SetETicketPassengersDetailsResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/validate": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint validates customer's basket.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_ValidateBasket",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.ValidateBasketCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.ValidateBasketResponse]"
            }
          }
        }
      }
    },
    "/customer/basket/journeys/status": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint verifies the basket journey status customer's basket.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_CheckBasketJourneysStatus",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.CheckBasketJourneysStatusResponse]"
            }
          }
        }
      }
    },
    "/customer/purchase/email": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint resends booking confirmation email.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_ResendConfirmationEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.ResendConfirmationEmailCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/purchase/externalpurchasereservations": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint is used for post purchase seat reservations on purchases done externally to RHUB/WebTIS. Pre-requisite for this call are POST /rail/journeys and POST /customer/basket, called using journey, services and fares information from external purchase.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_SetExternalPurchaseReservations",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetExternalPurchaseReservationsRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetExternalPurchaseReservationsResponse]"
            }
          }
        }
      }
    },
    "/customer/purchase/makereservation": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returns options for making reservations for the given trip or booking reference.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetMakeReservation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetMakeReservationResponse]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint makes reservation for the given trip or booking reference.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_SetMakeReservation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetMakeReservationRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetMakeReservationResponse]"
            }
          }
        }
      }
    },
    "/customer/purchase/ticketvalidity": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint checks which service a ticket is valid when the journey is open return.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetTicketValidity",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.outwarddatetime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.returndatetime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetTicketValidityResponse]"
            }
          }
        }
      }
    },
    "/customer/purchase/amendreservation": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint checks if amending reservation is possible and for which directions.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetAmendReservation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetAmendReservationResponse]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint amends reservation(s).",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_SetAmendReservation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetAmendReservationRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetAmendReservationResponse]"
            }
          }
        }
      }
    },
    "/customer/purchase/reservationservices": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint returnes services available for amendmend.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetReservationServices",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetReservationServicesResponse]"
            }
          }
        }
      }
    },
    "/customer/purchase/cancelreservation": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint checks if cancelling reservation is possible and for which directions.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetCancelReservation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetCancelReservationResponse]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint cancels the reservation.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_SetCancelReservation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetCancelReservationRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetCancelReservationResponse]"
            }
          }
        }
      }
    },
    "/customer/purchase/startofflinereservation": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This endpoint starts an offline reservation.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_StartOfflineReservation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.AddToBasketCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.StartOfflineReservationResponse]"
            }
          }
        }
      }
    },
    "/customer/purchase/seatmaps": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This method returns the Seat Maps handoff URL, which a client can use to to redirect to the WebTIS-hosted Seat Maps control.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_ReserveSeat",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.ReserveSeatRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.ReserveSeatResponse]"
            }
          }
        }
      }
    },
    "/customer/checkjourneyreservables": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method verifies if journey has a reservable seats.",
        "description": "\u003Cpara\u003EOptionally Logged in User. Requires valid session token.\u003C/para\u003E",
        "operationId": "Customer_CheckJourneyReservables",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.CheckJourneyReservablesResponse]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/customer/itso/smartcard": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method obtains ITSO smartcard by ISRN.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetItsoSmartCard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.isrn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardResponse]"
            }
          }
        }
      }
    },
    "/customer/itso/smartcards": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method returns all registered smartcards for the logged in user.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetItsoSmartCards",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardsResponse]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This method adds new smartcard for the logged in user.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_PutItsoSmartCards",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.PutItsoSmartCardsRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/itso/smartcard/photo": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method returns photo for the smartcard for the logged in user.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetItsoSmartCardPhoto",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardPhotoResponse]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This method updates photo for the smartcard for the logged in user.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_UpdateItsoSmartCardPhoto",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.UpdateItsoSmartCardPhotoRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This method sets photo for the smartcard for the logged in user.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_SetItsoSmartCardPhoto",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.AddItsoSmartCardPhotoRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "This method deletes photo for the smartcard for the logged in user.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_DeleteItsoSmartCardPhoto",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.DeleteItsoSmartCardPhotoRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/itso/smartcard/card": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "This method allows to transfer user ITSO smartcard.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_TransferItsoSmartCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.TransferItsoSmartCardRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This method allows the user to apply for a new ITSO smartcard.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_ApplyForItsoSmartCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.ApplyForItsoSmartCardRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.ApplyForItsoSmartCardResponse]"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "This method deregisters ITSO smartcard from user account.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_DeregisterItsoSmartCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.DeregisterItsoSmartCardRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/itso/smartcard/tickethistory": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method returns ITSO smartcard ticket history for the given user.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetItsoSmartCardTicketHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.isrn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.startdate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardTicketHistoryResponse]"
            }
          }
        }
      }
    },
    "/customer/itso/smartcard/journeyhistory": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method returns ITSO smartcard journey history for the given user.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetItsoSmartCardJourneyHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.isrn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.startdate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardJourneyHistoryResponse]"
            }
          }
        }
      }
    },
    "/customer/itso/smartcard/historyschedule": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method allows to retrieve the smartcard history download schedule for the specified ITSO smartcard ISRN.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetItsoSmartCardHistorySchedule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.isrn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardHistoryScheduleResponse]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This method This method allows to add a smartcard history download schedule for specified ITSO smartcard ISRN.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_SetItsoSmartCardHistorySchedule",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.SetItsoSmartCardHistoryScheduleRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/customer/purchase/expensereceipt": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method returns Base64 encoded PFD file with expense receipt document.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetExpenseReceipt",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetExpenseReceiptResponse]"
            }
          }
        }
      }
    },
    "/customer/purchase/eticketpdf": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method returns Base64 encoded PFD file with e-ticket document.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetEticketPdf",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.data.tripid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.bookingreference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetEticketPdfResponse]"
            }
          }
        }
      }
    },
    "/customer/card/paymentcards": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "This method returns user's payment cards with masked card number.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_GetPaymentCards",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Customer.Card.PaymentCard]]"
            }
          }
        }
      }
    },
    "/customer/card/paymentcard": {
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "This method deletes user's payment cards from his account.",
        "description": "\u003Cpara\u003ERequires Logged in User.\u003C/para\u003E",
        "operationId": "Customer_DeletePaymentCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Card.DeletePaymentCardRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]"
            }
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "tags": [
          "Default"
        ],
        "summary": "Very simple endpoint used to check if API responds.",
        "operationId": "Default_HealthCheck",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Default"
        ],
        "operationId": "Default_Version",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Utils.Helpers.VersionInfo]"
            }
          }
        }
      }
    },
    "/payment/initiate": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Used to initiate payment process. 1 of 3.",
        "description": "\u003Cpara\u003EThis endpoint stores internally the return URLs for successfull and failure paths then starts payment process.\u003C/para\u003E",
        "operationId": "Payment_InititatePayment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Payment.InitiatePaymentCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Payment.InitiatePaymentResponse]"
            }
          }
        }
      }
    },
    "/payment/result": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Used to get payment resoult data for payment process. 3 of 3.",
        "description": "\u003Cpara\u003EReturns the result of the LAST payment. Still on our own middleware we need to maintain the records in our DB, and for that we require the Storage Key to be sent.\u003C/para\u003E",
        "operationId": "Payment_GetPaymentResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.storagekey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Payment.GetPaymentResultResponse]"
            }
          }
        }
      }
    },
    "/payment/continuecheckout/{storageKey}/{success}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Used to continue checkout for payment process. 2 of 3.",
        "description": "\u003Cpara\u003EAfter payment response is returned from WL it then takes stored payment data and based on response redirects to eiter successfull or failure url. WL uses GET for successful callbacks and POST for failure callbacks. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Payment_ContinueCheckout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "storageKey",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "success",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Used to continue checkout for payment process. 2 of 3.",
        "description": "\u003Cpara\u003EAfter payment response is returned from WL it then takes stored payment data and based on response redirects to eiter successfull or failure url. WL uses GET for successful callbacks and POST for failure callbacks. Requires Logged in User.\u003C/para\u003E",
        "operationId": "Payment_ContinueCheckout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "storageKey",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "success",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rail/checkremoteserviceavailability": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Healthcheck of the API. NO Session Token required.",
        "operationId": "Rail_CheckRemoteServiceAvailability",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.CheckRemoteServiceAvailabilityResponse]"
            }
          }
        }
      }
    },
    "/rail/refundreasons": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Get all active refund reasons. NO Session Token required.",
        "operationId": "Rail_GetRefundReasons",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.RefundReasons]]"
            }
          }
        }
      }
    },
    "/rail/amendjourneyreasons": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Get active change of journey reasons",
        "description": "\u003Cpara\u003EThis returns the configured active reasons for change of journey (amending journey). NO Session Token required.\u003C/para\u003E",
        "operationId": "Rail_GetAmendJourneyReasonses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.RefundReasons]]"
            }
          }
        }
      }
    },
    "/rail/locations": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Get list of locations",
        "description": "\u003Cpara\u003EThis endpoint uses server caching. NO Session Token required.\u003C/para\u003E",
        "operationId": "Rail_GetLocations",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.data.locationcodes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "request.data.includealiases",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Rail.OutputLocation]]"
            }
          }
        }
      }
    },
    "/rail/railcards": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Get railcards by list type",
        "description": "\u003Cpara\u003EThis endpoint uses server caching. NO Session Token required.\u003C/para\u003E",
        "operationId": "Rail_GetRailCards",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Rail.RailCard]]"
            }
          }
        }
      }
    },
    "/rail/tickettypes": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Get tickets by list type",
        "description": "\u003Cpara\u003EThis endpoint uses server caching. NO Session Token required.\u003C/para\u003E",
        "operationId": "Rail_GetTicketTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Main",
              "Season"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Rail.TicketType]]"
            }
          }
        }
      }
    },
    "/rail/tickettype/fullterms/{ticketTypeCode}": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Get Full Terms And Conditions",
        "description": "\u003Cpara\u003EThis endpoint gets the full terms and conditions for the supplied Ticket Type Code. NO Session Token required\u003C/para\u003E",
        "operationId": "Rail_GetTicketTypeFullTerm",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ticketTypeCode",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.TermsAndCondition]"
            }
          }
        }
      }
    },
    "/rail/date": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Gets ticket search date ranges",
        "description": "\u003Cpara\u003EThis endpoint uses server caching. NO Session Token required.\u003C/para\u003E",
        "operationId": "Rail_GetDates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.DateResponse]"
            }
          }
        }
      }
    },
    "/rail/journeys": {
      "post": {
        "tags": [
          "Rail"
        ],
        "summary": "Search for journeys - Desktop",
        "description": "\u003Cpara\u003EThis endpoint is used by the desktop mixing deck. NO Session Token required.\u003C/para\u003E",
        "operationId": "Rail_GetJourneys",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.JourneysCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Rail.Journeys]"
            }
          }
        }
      }
    },
    "/rail/journeys/{direction}/{journeyDirection}": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Extend for Search for journeys",
        "description": "\u003Cpara\u003EThis endpoint is used for obtainearlier or later journeys. Valid Session Optional.\u003C/para\u003E",
        "operationId": "Rail_GetJourneysExtend",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "journeyDirection",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.data.direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Later",
              "Earlier"
            ]
          },
          {
            "name": "request.data.journeydirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Outward",
              "Return",
              "Both"
            ]
          },
          {
            "name": "request.data.extendtimetable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.data.fareclasses",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.openreturn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.Journeys]"
            }
          }
        }
      }
    },
    "/rail/journey/{uid}/{enquiryid}": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Get service details",
        "description": "\u003Cpara\u003EThis endpoint is used for obtain journey details. Valid Session Optional.\u003C/para\u003E",
        "operationId": "Rail_GetJourneyDetail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "enquiryid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.data.uid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.enquiryid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Rail.RailJourneyDetail]]"
            }
          }
        }
      }
    },
    "/rail/journeys/search": {
      "post": {
        "tags": [
          "Rail"
        ],
        "summary": "Search for journeys - Mobile",
        "description": "\u003Cpara\u003EThis endpoint is used by the mobile mixing deck.\u003C/para\u003E",
        "operationId": "Rail_JourneysSearch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchResult]"
            }
          }
        }
      }
    },
    "/rail/journeys/extend/{direction}/{journeyDirection}/{searchId}": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Extends number of found journeys.",
        "description": "\u003Cpara\u003EThis endpoint is used for obtain earlier or later journeys\u003C/para\u003E",
        "operationId": "Rail_JourneysSearchExtend",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "journeyDirection",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.data.searchid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.searchquery.originnlc",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.searchquery.destinationnlc",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.searchquery.outwarddatetime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.searchquery.outwarddepartafter",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.data.searchquery.isreturn",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.data.searchquery.isopenreturn",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.data.searchquery.returndatetime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.data.searchquery.returndepartafter",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.data.searchquery.directservicesonly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.data.searchquery.firstclass",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.data.searchquery.standardclass",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.data.searchquery.adults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.searchquery.children",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.data.searchquery.avoid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.searchquery.via",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.searchquery.promotion",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.searchquery.railcards",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {

            },
            "collectionFormat": "multi"
          },
          {
            "name": "request.data.direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Later",
              "Earlier"
            ]
          },
          {
            "name": "request.data.journeydirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Outward",
              "Return",
              "Both"
            ]
          },
          {
            "name": "request.data.extendtimetable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.data.fareclasses",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.data.openreturn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.sessiontoken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.mock",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchResult]"
            }
          }
        }
      }
    },
    "/rail/journeys/multidays": {
      "post": {
        "tags": [
          "Rail"
        ],
        "summary": "Used to find the cheapest single tickets.",
        "description": "\u003Cpara\u003EUsed to find the cheapest single tickets from a given date to a number of days in to the future. Cheapest tickets are typically the Advance purchase type ticket. This multidays call provides a summary view across a number of days; for a specific date use rail/journeys/multiday\u003C/para\u003E",
        "operationId": "Rail_FindMultiDaySummary",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.MultiDaySummaryCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.MultiDaySummaryResponse]"
            }
          }
        }
      }
    },
    "/rail/journeys/multiday/check": {
      "post": {
        "tags": [
          "Rail"
        ],
        "summary": "Used to check if the found fare in multiday search is still valid.",
        "description": "\u003Cpara\u003EAfter selecting given fare from Multiday this endpoint checks if the fare is still valid, with the same faretype and price. If not then it updates the local cache with new values. Valid Session Optional.\u003C/para\u003E",
        "operationId": "Rail_MultidayCheckJourneys",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneyCheckRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneyCheckResponse]"
            }
          }
        }
      }
    },
    "/rail/journeys/multiday": {
      "post": {
        "tags": [
          "Rail"
        ],
        "summary": "Used to check selected day in multiday search for details.",
        "description": "\u003Cpara\u003EAfter selecting given fare from Multiday this endpoint returns detailed information about cheapest fares in given day.\u003C/para\u003E",
        "operationId": "Rail_FindMultiDayJourneys",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Request[Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneysCriteria]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneysResponse]"
            }
          }
        }
      }
    },
    "/rail/journeys/multiday/flows": {
      "get": {
        "tags": [
          "Rail"
        ],
        "summary": "Used to check Active Calendar View Flows on given route.",
        "description": "\u003Cpara\u003EIt verifies if CFF (multidays) are available for the given route. It works only one way for return it needs to be called again with opposite directions. NO Session Token required.\u003C/para\u003E",
        "operationId": "Rail_GetMultidayFlow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.MultidayFlowsResponse]"
            }
          }
        }
      }
    },
    "/rail/journeys/search/nre": {
      "post": {
        "tags": [
          "Rail"
        ],
        "summary": "Execute the search in NRE.",
        "description": "\u003Cpara\u003EExecute the search in NRE for given criteria and then returns prepared XML for basket handoff. NO Session Token required.\u003C/para\u003E",
        "operationId": "Rail_NreSearch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.requestid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.purchaseticketrepsonserequestid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.origin",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.destination",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.outwardtime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.outwarddeparture",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.outwardarrival",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.inwardtime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.inwarddeparture",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.inwardarrival",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.adults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.children",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.railcards",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {

            },
            "collectionFormat": "multi"
          },
          {
            "name": "request.options.fareclass",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.options.fastesttrainsonly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.options.sleepertrainsonly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.options.directtrainsonly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.options.searchtype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.options.via",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.options.notvia",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.faregroups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {

            },
            "collectionFormat": "multi"
          },
          {
            "name": "request.baskettotal",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Brunel.Integration.RetailHub.Dto.OptionalAuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Login.LoginRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Login.LoginRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Login.LoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "captchatoken": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Login.LoginResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "sessiontoken": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Login.LoginResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Login.LoginResponse": {
      "type": "object",
      "properties": {
        "authenticatedsessionid": {
          "type": "string"
        },
        "userprofile": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.CustomerProfile"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.CustomerProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "mobilenumber": {
          "type": "string"
        },
        "favouritestationnlc": {
          "type": "string"
        },
        "favouriterailcard": {
          "type": "string"
        },
        "signuptonewsletter": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest": {
      "type": "object",
      "properties": {
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.StatusResult]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.StatusResult"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.StatusResult": {
      "type": "object",
      "properties": {
        "successful": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.OptionalAuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Registration.RegistrationRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Registration.RegistrationRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Registration.RegistrationRequest": {
      "type": "object",
      "properties": {
        "customerprofile": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.CustomerProfile"
        },
        "password": {
          "type": "string"
        },
        "staffid": {
          "type": "string"
        },
        "nectarcardnumber": {
          "type": "string"
        },
        "captchatoken": {
          "type": "string"
        },
        "canwecontactyou": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Gdpr"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Gdpr": {
      "type": "object",
      "properties": {
        "app": {
          "type": "boolean"
        },
        "email": {
          "type": "boolean"
        },
        "im16yearsold": {
          "type": "boolean"
        },
        "nothanks": {
          "type": "boolean"
        },
        "sms": {
          "type": "boolean"
        },
        "post": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Registration.RegistrationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "sessiontoken": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Registration.RegistrationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Registration.RegistrationResponse": {
      "type": "object",
      "properties": {
        "authenticatedsessionid": {
          "type": "string"
        },
        "userprofile": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.CustomerProfile"
        },
        "loyaltycardlinkstatus": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.OptionalAuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Password.PasswordRecoveryRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Password.PasswordRecoveryRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Password.PasswordRecoveryRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "captchatoken": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Password.ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "reminderid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "newpassword": {
          "type": "string"
        },
        "temporarypassword": {
          "type": "string"
        },
        "captchatoken": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Password.ChangePasswordRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Password.ChangePasswordRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Password.ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "currentpassword": {
          "type": "string"
        },
        "newpassword": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.MixingDeckParameters]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.MixingDeckParameters"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.MixingDeckParameters": {
      "type": "object",
      "properties": {
        "originnlc": {
          "type": "string"
        },
        "destinationnlc": {
          "type": "string"
        },
        "outwarddatetime": {
          "format": "date-time",
          "type": "string"
        },
        "outwarddepartafter": {
          "type": "boolean"
        },
        "returndatetime": {
          "format": "date-time",
          "type": "string"
        },
        "returndepartafter": {
          "type": "boolean"
        },
        "openreturn": {
          "type": "boolean"
        },
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        },
        "directtrainsonly": {
          "type": "boolean"
        },
        "standardclass": {
          "type": "boolean"
        },
        "firstclass": {
          "type": "boolean"
        },
        "railcards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.MixingDeckParameters.Railcard"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.MixingDeckParameters.Railcard": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.HandoffResponse": {
      "type": "object",
      "properties": {
        "handoffurl": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.BookingSearchCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.BookingSearchCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.BookingSearchCriteria": {
      "type": "object",
      "properties": {
        "fromdate": {
          "format": "date-time",
          "type": "string"
        },
        "todate": {
          "format": "date-time",
          "type": "string"
        },
        "fulfilmentmethodtype": {
          "enum": [
            "TicketOnDeparture",
            "LocalTicketOnDeparture",
            "Post",
            "Mobile",
            "ETicket",
            "PrintAtHome",
            "RemoteSmartCard",
            "External",
            "Smartcard",
            "TransitHub",
            "All",
            "Unknown",
            "Direct"
          ],
          "type": "string"
        },
        "producttype": {
          "enum": [
            "Ticket",
            "Season",
            "Rover",
            "GoldRecordCard",
            "FlexiSeason",
            "NotImplemented",
            "All"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Bookings.Purchase]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Purchase"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.Purchase": {
      "type": "object",
      "properties": {
        "purchasedate": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "referencecode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "fulfilmentmethod": {
          "enum": [
            "TicketOnDeparture",
            "LocalTicketOnDeparture",
            "Post",
            "Mobile",
            "ETicket",
            "PrintAtHome",
            "RemoteSmartCard",
            "External",
            "Smartcard",
            "TransitHub",
            "All",
            "Unknown",
            "Direct"
          ],
          "type": "string"
        },
        "fulfilmentcost": {
          "format": "int32",
          "type": "integer"
        },
        "transactioncost": {
          "format": "int32",
          "type": "integer"
        },
        "producttypes": {
          "type": "array",
          "items": {
            "enum": [
              "Ticket",
              "Season",
              "Rover",
              "GoldRecordCard",
              "FlexiSeason",
              "NotImplemented",
              "All"
            ],
            "type": "string"
          }
        },
        "trips": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Trip"
          }
        },
        "isseasoncontinuousauthoritysetup": {
          "type": "boolean"
        },
        "friendlystatus": {
          "type": "string"
        },
        "purchasestatus": {
          "enum": [
            "Active",
            "Pending",
            "Unavailable",
            "Issue"
          ],
          "type": "string"
        },
        "totalcost": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "upcomingbooking": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "upcomingseasonticketexpiration": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "iscancelled": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.Trip": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "destinationnlc": {
          "type": "string"
        },
        "originnlc": {
          "type": "string"
        },
        "historicalbookingreferences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reservationamendment": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.ReservationAmendment"
        },
        "outwarddeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "returndeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "cost": {
          "format": "int32",
          "type": "integer"
        },
        "journeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Journey"
          }
        },
        "seasontickets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.SeasonTicketSummary"
          }
        },
        "tickettypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reservationtypes": {
          "type": "array",
          "items": {
            "enum": [
              "Seat",
              "Bike",
              "Berth",
              "Unknown"
            ],
            "type": "string"
          }
        },
        "occursinpast": {
          "type": "boolean",
          "readOnly": true
        },
        "isgiftvoucher": {
          "type": "boolean"
        },
        "haseticketpdf": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.ReservationAmendment": {
      "type": "object",
      "properties": {
        "bookingreference": {
          "type": "string"
        },
        "creationdate": {
          "format": "date-time",
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "string"
        },
        "originalorderid": {
          "format": "int32",
          "type": "integer"
        },
        "outwarddeparture": {
          "format": "date-time",
          "type": "string"
        },
        "returndeparture": {
          "format": "date-time",
          "type": "string"
        },
        "reservationtypes": {
          "type": "array",
          "items": {
            "enum": [
              "Seat",
              "Bike",
              "Berth",
              "Unknown"
            ],
            "type": "string"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.Journey": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "accommodationsupplements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Supplement"
          }
        },
        "addon": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "destinationgroup": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "origingroup": {
          "type": "string"
        },
        "outwarddeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "returndeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "totalcost": {
          "format": "int32",
          "type": "integer"
        },
        "faretimetableavailability": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.FareTimeAvailability"
          }
        },
        "fares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Fares"
          }
        },
        "passengers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.PassengerGroup"
          }
        },
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Route"
          }
        },
        "outwardtimetablejourneys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TimeTableJourney"
          }
        },
        "returntimetablejourneys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TimeTableJourney"
          }
        },
        "tickettypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TicketTypeDetail"
          }
        },
        "numberofflexiseasonpasses": {
          "format": "int32",
          "type": "integer"
        },
        "outwardqualifiesfordelayrepay": {
          "type": "boolean"
        },
        "returnqualifiesfordelayrepay": {
          "type": "boolean"
        },
        "seasonqualifiesfordelayrepay": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.SeasonTicketSummary": {
      "type": "object",
      "properties": {
        "seasonexpirydate": {
          "format": "date-time",
          "type": "string"
        },
        "seasonlostdays": {
          "type": "string"
        },
        "seasonpov": {
          "type": "string"
        },
        "seasontickettype": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Supplement": {
      "type": "object",
      "properties": {
        "aftersales": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.SupplementAfterSales"
          }
        },
        "availability": {
          "enum": [
            "Available",
            "PartiallyAvailable",
            "Unavailable",
            "NoReservationsPossible",
            "ServiceClosed",
            "QuotaNotOpen",
            "MandatoryReservationRequired",
            "Unknown"
          ],
          "type": "string"
        },
        "supplementclass": {
          "enum": [
            "All",
            "First",
            "Standard",
            "Other",
            "Unknown"
          ],
          "type": "string"
        },
        "fareid": {
          "format": "int32",
          "type": "integer"
        },
        "groupid": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "includedinpackage": {
          "type": "boolean"
        },
        "passengers": {
          "format": "int32",
          "type": "integer"
        },
        "places": {
          "format": "int32",
          "type": "integer"
        },
        "relatedfare": {
          "format": "int32",
          "type": "integer"
        },
        "reservationstatus": {
          "enum": [
            "Selected",
            "SomeMandatorySelectionsStillToBeMade",
            "PackageSelectionMade",
            "SomeMandatoryPackageSelectionsStillToBeMade",
            "NoReservation",
            "Unknown"
          ],
          "type": "string"
        },
        "specialinstructions": {
          "enum": [
            "Solo",
            "Together",
            "NotAvailable",
            "Unknown"
          ],
          "type": "string"
        },
        "supplements": {
          "format": "int32",
          "type": "integer"
        },
        "ticketnumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timetablejourneyid": {
          "format": "int32",
          "type": "integer"
        },
        "timetablelegid": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "Seat",
            "FareAsSeat",
            "Berth",
            "Cycle",
            "NonAccomodation",
            "FareAsNonAccomodation",
            "Unknown"
          ],
          "type": "string"
        },
        "upgrade": {
          "enum": [
            "NotAvailable",
            "ToFirstClass",
            "ToFirstClassAndRelatedToFare",
            "Unknown"
          ],
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "cost": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "direction": {
          "enum": [
            "Outward",
            "Return",
            "Both",
            "Unknown"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.FareTimeAvailability": {
      "type": "object",
      "properties": {
        "timetablejourneyid": {
          "format": "int32",
          "type": "integer"
        },
        "fareid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.Fares": {
      "type": "object",
      "properties": {
        "adultfare": {
          "format": "int32",
          "type": "integer"
        },
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "adultsmultiplier": {
          "format": "int32",
          "type": "integer"
        },
        "childfare": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        },
        "childrenmultiplier": {
          "format": "int32",
          "type": "integer"
        },
        "discounttype": {
          "type": "string"
        },
        "eticketreference": {
          "type": "string"
        },
        "fareid": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "totaladultfare": {
          "format": "int32",
          "type": "integer"
        },
        "totalchildfare": {
          "format": "int32",
          "type": "integer"
        },
        "totalfare": {
          "format": "int32",
          "type": "integer"
        },
        "tickettype": {
          "type": "string"
        },
        "validtodate": {
          "format": "date-time",
          "type": "string"
        },
        "passengerdetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Passenger"
          }
        },
        "ticketnumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.PassengerGroup": {
      "type": "object",
      "properties": {
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        },
        "fareids": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "railcards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.DiscountType"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.Route": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.TimeTableJourney": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "direction": {
          "enum": [
            "Outward",
            "Return",
            "Both",
            "Unknown"
          ],
          "type": "string"
        },
        "offpeakstatus": {
          "enum": [
            "PeakJourney",
            "OffPeakJourney",
            "SuperOffPeakJourney",
            "PeakStatusUnknown",
            "Unknown"
          ],
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "timetablelegs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TimetableLeg"
          }
        },
        "timetablejourneyid": {
          "format": "int32",
          "type": "integer"
        },
        "totalfare": {
          "format": "int32",
          "type": "integer"
        },
        "tickettypedetail": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TicketTypeDetail"
        },
        "origindeparture": {
          "type": "string"
        },
        "destinationarrival": {
          "type": "string"
        },
        "hasserviceselected": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.TicketTypeDetail": {
      "type": "object",
      "properties": {
        "classtype": {
          "enum": [
            "First",
            "Standard"
          ],
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "journeytype": {
          "enum": [
            "Single",
            "Return",
            "Season",
            "Rover",
            "GoldRecordCard",
            "Undefined"
          ],
          "type": "string"
        },
        "producttype": {
          "enum": [
            "CarnetWithTotalPriceOnSaleCoupon",
            "CarnetWithIndividualPriceOnEachTicket",
            "ChildFlatFare",
            "FlexiSeason",
            "NotSpecialProduct",
            "Undefined"
          ],
          "type": "string"
        },
        "seasontype": {
          "enum": [
            "FixedPriced",
            "PeriodPriced",
            "FlexiSeason",
            "Undefined"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.SupplementAfterSales": {
      "type": "object",
      "properties": {
        "datetime": {
          "type": "string"
        },
        "neworderid": {
          "format": "int32",
          "type": "integer"
        },
        "noofpassengers": {
          "format": "int32",
          "type": "integer"
        },
        "noofsupplements": {
          "format": "int32",
          "type": "integer"
        },
        "referenceid": {
          "format": "int32",
          "type": "integer"
        },
        "refundreference": {
          "type": "string"
        },
        "ticketnumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "enum": [
            "RefundStarted",
            "RefundCompleted",
            "ReservationCancelled",
            "DuplicateOrder",
            "Unknown"
          ],
          "type": "string"
        },
        "userid": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.Passenger": {
      "type": "object",
      "properties": {
        "adultchild": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "smartcardid": {
          "type": "string"
        },
        "transactionnumber": {
          "type": "string"
        },
        "eticketreference": {
          "type": "string"
        },
        "originaleticketreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.DiscountType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.TimetableLeg": {
      "type": "object",
      "properties": {
        "timetablelegid": {
          "format": "int32",
          "type": "integer"
        },
        "arrivalstation": {
          "type": "string"
        },
        "arrivaltime": {
          "format": "date-time",
          "type": "string"
        },
        "departurestation": {
          "type": "string"
        },
        "departuretime": {
          "format": "date-time",
          "type": "string"
        },
        "mode": {
          "enum": [
            "Bus",
            "Ferry",
            "Metro",
            "Transfer",
            "Underground",
            "Walk",
            "Tram",
            "Metro_Walk",
            "Train",
            "Unknown"
          ],
          "type": "string"
        },
        "sleeperclass": {
          "enum": [
            "StandardBerthsOnly",
            "FirstClassOnly",
            "BothClasses",
            "NoBerths",
            "Undefined",
            "Unknown"
          ],
          "type": "string"
        },
        "seatclass": {
          "enum": [
            "StandardSeatsOnly",
            "FirstClassSeatsOnly",
            "BothClassesSeats",
            "NoSeats",
            "Unknown"
          ],
          "type": "string"
        },
        "toc": {
          "type": "string"
        },
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Place"
          }
        },
        "childrenunder5": {
          "format": "int32",
          "type": "integer"
        },
        "retailtrainid": {
          "type": "string"
        },
        "reservable": {
          "type": "string"
        },
        "mileage": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Place": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.PlaceAttribute"
          }
        },
        "coach": {
          "type": "string"
        },
        "gender": {
          "enum": [
            "Male",
            "Female",
            "Together",
            "Solo",
            "Unknown"
          ],
          "type": "string"
        },
        "placeid": {
          "type": "string"
        },
        "cabin": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "Seat",
            "Bike",
            "Berth",
            "Unknown"
          ],
          "type": "string"
        },
        "placesoverbooked": {
          "format": "int32",
          "type": "integer"
        },
        "hasinterconnectingdoors": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.PlaceAttribute": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.Purchase]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Purchase"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.BookingDetailsCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.BookingDetailsCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.BookingDetailsCriteria": {
      "type": "object",
      "properties": {
        "tripid": {
          "type": "string"
        },
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.SearchParameter]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.SearchParameter"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.SearchParameter": {
      "type": "object",
      "properties": {
        "changeat": {
          "type": "string"
        },
        "directserviceonly": {
          "type": "boolean"
        },
        "enquirymethod": {
          "type": "string"
        },
        "firstclass": {
          "type": "boolean"
        },
        "openreturn": {
          "type": "boolean"
        },
        "oneway": {
          "type": "boolean"
        },
        "isseasonticket": {
          "type": "boolean"
        },
        "locfrom": {
          "type": "string"
        },
        "locto": {
          "type": "string"
        },
        "datetimefrom": {
          "type": "string"
        },
        "outwarddepartafter": {
          "type": "boolean"
        },
        "passengergroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.SearchPassengerPreference"
          }
        },
        "datetimeto": {
          "type": "string"
        },
        "returndepartafter": {
          "type": "boolean"
        },
        "showservices": {
          "type": "boolean"
        },
        "sleeperonly": {
          "type": "boolean"
        },
        "sleeperwithconnectionsonly": {
          "type": "boolean"
        },
        "smartcardfaresonly": {
          "type": "boolean"
        },
        "vianlc": {
          "type": "string"
        },
        "annual": {
          "type": "string"
        },
        "monthly": {
          "type": "string"
        },
        "weekly": {
          "type": "string"
        },
        "custom": {
          "type": "string"
        },
        "standardclass": {
          "type": "boolean"
        },
        "overtakentrainindicatior": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.SearchPassengerPreference": {
      "type": "object",
      "properties": {
        "numberofadults": {
          "format": "int32",
          "type": "integer"
        },
        "numberofchildren": {
          "format": "int32",
          "type": "integer"
        },
        "numberofrailcards": {
          "format": "int32",
          "type": "integer"
        },
        "railcardcode": {
          "type": "string"
        },
        "excessablefares": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "originalfareid": {
          "format": "int32",
          "type": "integer"
        },
        "railcarddescription": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.PurchaseDetails]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.PurchaseDetails"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.PurchaseDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "originalid": {
          "type": "string"
        },
        "parentid": {
          "type": "string"
        },
        "customerid": {
          "type": "string"
        },
        "sellingmachineid": {
          "type": "string"
        },
        "duplicateorder": {
          "type": "boolean"
        },
        "tripdetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TripDetail"
          }
        },
        "referencecode": {
          "type": "string"
        },
        "creationdate": {
          "format": "date-time",
          "type": "string"
        },
        "cardpayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.CardPayment"
          }
        },
        "fulfilmentdetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.FulfilmentDetails"
          }
        },
        "altmoppayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.AlternativeMethodOfPayment"
          }
        },
        "onlinepayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.OnlinePayment"
          }
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Refund"
          }
        },
        "fulfilmentchargesundry": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Sundry"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.TripDetail": {
      "type": "object",
      "properties": {
        "outwarddeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "returndeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "destinationnlc": {
          "type": "string"
        },
        "originnlc": {
          "type": "string"
        },
        "journeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Journey"
          }
        },
        "sundries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Sundry"
          }
        },
        "totalcost": {
          "format": "int32",
          "type": "integer"
        },
        "fulfilmentid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.CardPayment": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "cardissuer": {
          "type": "string"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "pan": {
          "type": "string"
        },
        "expirymmyy": {
          "type": "string"
        },
        "creditdebitcard": {
          "enum": [
            "Credit",
            "Debit",
            "No",
            "Unknown",
            "Yes"
          ],
          "type": "string"
        },
        "billingaddress": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.BasketCustomer"
        },
        "paymentsourcetype": {
          "enum": [
            "ApplePay",
            "GooglePay",
            "HandoffPayment",
            "NotAvailable"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.FulfilmentDetails": {
      "type": "object",
      "properties": {
        "fulfilmentid": {
          "format": "int32",
          "type": "integer"
        },
        "fulfilmenttype": {
          "enum": [
            "TicketOnDeparture",
            "LocalTicketOnDeparture",
            "Post",
            "Mobile",
            "ETicket",
            "PrintAtHome",
            "RemoteSmartCard",
            "External",
            "Smartcard",
            "TransitHub",
            "All",
            "Unknown",
            "Direct"
          ],
          "type": "string"
        },
        "deliverymethodid": {
          "format": "int32",
          "type": "integer"
        },
        "deliverymethod": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.FulfilmentDetailsDeliveryOption"
        },
        "todcollectionstation": {
          "type": "string"
        },
        "toduserlevel": {
          "type": "string"
        },
        "smartcardfulfilmentdetails": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.SmartCardFulfilmentDetails"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.AlternativeMethodOfPayment": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "altmopcode": {
          "type": "string"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "overpaymentsundry": {
          "type": "string"
        },
        "overpaymentamount": {
          "format": "int32",
          "type": "integer"
        },
        "voucherreference": {
          "type": "string"
        },
        "paymentrefundflag": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "paymentsundry": {
          "type": "string"
        },
        "carriedforward": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.OnlinePayment": {
      "type": "object",
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "onlinepaymenttype": {
          "enum": [
            "PayPal",
            "Other"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.Refund": {
      "type": "object",
      "properties": {
        "reference": {
          "type": "string"
        },
        "requestsedid": {
          "type": "string"
        },
        "refundstatus": {
          "enum": [
            "Initial",
            "RefundAuthorised",
            "RefundCompleted",
            "RefundDeclined",
            "RefundInProgress",
            "RefundPending",
            "RefundTodIssued",
            "RebookPending"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "Automatic",
            "Manual"
          ],
          "type": "string"
        },
        "todissuekey": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.Sundry": {
      "type": "object",
      "properties": {
        "aftersales": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.SundryAfterSales"
          }
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "creditdebit": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "accountingtype": {
          "type": "string"
        },
        "cost": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "string"
        },
        "moreinformation": {
          "type": "string"
        },
        "nonrspflag": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.BasketCustomer": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.FulfilmentDetailsDeliveryOption": {
      "type": "object",
      "properties": {
        "deliveryinstruction": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayname": {
          "type": "string"
        },
        "fee": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.SmartCardFulfilmentDetails": {
      "type": "object",
      "properties": {
        "collectiondays": {
          "type": "string"
        },
        "collectionlocation": {
          "type": "string"
        },
        "smartcardidlast4digits": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.SundryAfterSales": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "datetime": {
          "type": "string"
        },
        "userid": {
          "format": "int32",
          "type": "integer"
        },
        "neworderid": {
          "type": "string"
        },
        "referenceid": {
          "type": "string"
        },
        "refundreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.PurchaseTripDetails]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.PurchaseTripDetails"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.PurchaseTripDetails": {
      "type": "object",
      "properties": {
        "aftersalestasks": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTasks"
        },
        "amendedreferencecode": {
          "type": "string"
        },
        "amenddate": {
          "format": "date-time",
          "type": "string"
        },
        "selectedtripdetails": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TripDetail"
        },
        "status": {
          "type": "string"
        },
        "friendlystatus": {
          "type": "string"
        },
        "haseticketpdf": {
          "type": "boolean"
        },
        "referencecode": {
          "type": "string"
        },
        "creationdate": {
          "format": "date-time",
          "type": "string"
        },
        "cardpayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.CardPayment"
          }
        },
        "fulfilmentdetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.FulfilmentDetails"
          }
        },
        "altmoppayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.AlternativeMethodOfPayment"
          }
        },
        "onlinepayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.OnlinePayment"
          }
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Refund"
          }
        },
        "fulfilmentchargesundry": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Sundry"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTasks": {
      "type": "object",
      "properties": {
        "amendjourney": {
          "type": "boolean"
        },
        "amendreservation": {
          "type": "boolean"
        },
        "canceldeferred": {
          "type": "boolean"
        },
        "cancelreservation": {
          "type": "boolean"
        },
        "makereservation": {
          "type": "boolean"
        },
        "reprintgoldcard": {
          "type": "boolean"
        },
        "requestrefund": {
          "type": "boolean"
        },
        "seasonbuyagain": {
          "type": "boolean"
        },
        "seasonbuyagainwithchanges": {
          "type": "boolean"
        },
        "amendphotofororder": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.UpcomingTrip]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.UpcomingTrip"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.UpcomingTrip": {
      "type": "object",
      "properties": {
        "referencecode": {
          "type": "string"
        },
        "tripid": {
          "type": "string"
        },
        "originnlc": {
          "type": "string"
        },
        "destinationnlc": {
          "type": "string"
        },
        "outwarddeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "returndeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "cost": {
          "format": "int32",
          "type": "integer"
        },
        "journeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Journey"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.CustomerInitialBookingsData]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.CustomerInitialBookingsData"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.CustomerInitialBookingsData": {
      "type": "object",
      "properties": {
        "upcomingtrip": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.UpcomingTrip"
        },
        "hasdelayrepaybookings": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Basket.BasketSummary]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "sessiontoken": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketSummary"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.BasketSummary": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "totalcostpence": {
          "format": "int32",
          "type": "integer"
        },
        "numberofitems": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTasksCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTasksCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTasksCriteria": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTasks]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTasks"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.TicketDetailsCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TicketDetailsCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.TicketDetailsCriteria": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "aftersalesmode": {
          "type": "string"
        },
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.TicketDetails]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TicketDetails"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.TicketDetails": {
      "type": "object",
      "properties": {
        "aftersalesticketdetail": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTicketDetails"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.AfterSalesTicketDetails": {
      "type": "object",
      "properties": {
        "avfsalereferenceid": {
          "format": "int32",
          "type": "integer"
        },
        "ctrreference": {
          "type": "string"
        },
        "costorstatus": {
          "type": "string"
        },
        "destinationnlc": {
          "type": "string"
        },
        "fareid": {
          "format": "int32",
          "type": "integer"
        },
        "groupsavefareidflag": {
          "type": "string"
        },
        "isadult": {
          "type": "boolean"
        },
        "isleadpassenger": {
          "type": "boolean"
        },
        "isselectable": {
          "type": "boolean"
        },
        "issleepersupplementattached": {
          "type": "boolean"
        },
        "issupplement": {
          "type": "boolean"
        },
        "isticketed": {
          "type": "boolean"
        },
        "journeyindex": {
          "format": "int32",
          "type": "integer"
        },
        "originnlc": {
          "type": "string"
        },
        "packages": {
          "format": "int32",
          "type": "integer"
        },
        "passengerdescription": {
          "type": "string"
        },
        "ticketindex": {
          "format": "int32",
          "type": "integer"
        },
        "ticketnumber": {
          "type": "string"
        },
        "tickettypecode": {
          "type": "string"
        },
        "tickettypedescription": {
          "type": "string"
        },
        "refundstatus": {
          "type": "string"
        },
        "costinpence": {
          "format": "int32",
          "type": "integer"
        },
        "newbookingreference": {
          "type": "string"
        },
        "isexcessed": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.LatestAvailability]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.LatestAvailability"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.LatestAvailability": {
      "type": "object",
      "properties": {
        "fulfilmentwindowdays": {
          "format": "int32",
          "type": "integer"
        },
        "hour": {
          "format": "int32",
          "type": "integer"
        },
        "isfixedtimerule": {
          "type": "boolean"
        },
        "latestavailabilityrulesid": {
          "format": "int32",
          "type": "integer"
        },
        "minute": {
          "format": "int32",
          "type": "integer"
        },
        "numberofdays": {
          "format": "int32",
          "type": "integer"
        },
        "numberofhours": {
          "format": "int32",
          "type": "integer"
        },
        "latestcollectiondatetime": {
          "format": "date-time",
          "type": "string"
        },
        "earliestcollectiondatetime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.RefundCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.RefundCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.RefundCriteria": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "ticketstorefund": {
          "type": "string"
        },
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.RefundAmountDetails]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.RefundAmountDetails"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.RefundAmountDetails": {
      "type": "object",
      "properties": {
        "adminfeeinpence": {
          "format": "int32",
          "type": "integer"
        },
        "discountamounttobedeductedinpence": {
          "format": "int32",
          "type": "integer"
        },
        "refundvalueinpence": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.RefundResultCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.RefundResultCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.RefundResultCriteria": {
      "type": "object",
      "properties": {
        "bookingreference": {
          "type": "string"
        },
        "tripid": {
          "type": "string"
        },
        "additionalinformation": {
          "type": "string"
        },
        "reasonid": {
          "type": "string"
        },
        "ticketstochange": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TicketsToChange"
        },
        "userhastickets": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.TicketsToChange": {
      "type": "object",
      "properties": {
        "aftersalesticketdetail": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TicketToChange"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.TicketToChange": {
      "type": "object",
      "properties": {
        "fareid": {
          "format": "int32",
          "type": "integer"
        },
        "journeyindex": {
          "format": "int32",
          "type": "integer"
        },
        "ticketindex": {
          "format": "int32",
          "type": "integer"
        },
        "ticketnumber": {
          "type": "string"
        },
        "tickettypecode": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Bookings.RefundResult]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.RefundResult"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.RefundResult": {
      "type": "object",
      "properties": {
        "cancelledseats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Place"
          }
        },
        "isautomaticrefund": {
          "type": "boolean"
        },
        "oneormoremandatoryreservationscancelled": {
          "type": "boolean"
        },
        "queryuserifhastickets": {
          "type": "boolean"
        },
        "referencenumber": {
          "type": "string"
        },
        "refundsucceeded": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Bookings.ChangeOfJourneyCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.ChangeOfJourneyCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.ChangeOfJourneyCriteria": {
      "type": "object",
      "properties": {
        "bookingreference": {
          "type": "string"
        },
        "tripid": {
          "type": "string"
        },
        "additionalinformation": {
          "type": "string"
        },
        "reasonid": {
          "type": "string"
        },
        "ticketstochange": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.CustomerProfile]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.CustomerProfile"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.CustomerProfile]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.CustomerProfile"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Request[Brunel.Integration.RetailHub.Dto.AddressLookupRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.AddressLookupRequest"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AddressLookupRequest": {
      "type": "object",
      "properties": {
        "postcode": {
          "type": "string"
        },
        "housenumber": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Address]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Address"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Address": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "inhabitant": {
          "type": "string"
        },
        "addressline1": {
          "type": "string"
        },
        "addressline2": {
          "type": "string"
        },
        "addressline3": {
          "type": "string"
        },
        "town": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "countrycode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "isdefault": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "GeneralAddress",
            "HomeAddress",
            "ITSOAddress"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Address]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Address"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Preferences.Preferences]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.Preferences"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.Preferences": {
      "type": "object",
      "properties": {
        "customerpreference": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.CustomerPreference"
        },
        "organizationpreferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.Preference"
          }
        },
        "favouritejourneys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.FavouriteJourney"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.CustomerPreference": {
      "type": "object",
      "properties": {
        "signuptonewsletter": {
          "type": "boolean"
        },
        "signuptothirdpartyemail": {
          "type": "boolean"
        },
        "canwecontactyou": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Gdpr"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.Preference": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.FavouriteJourney": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "groupid": {
          "format": "int32",
          "type": "integer"
        },
        "destinationnlc": {
          "type": "string"
        },
        "avoidnlc": {
          "type": "string"
        },
        "travelvianlc": {
          "type": "string"
        },
        "originnlc": {
          "type": "string"
        },
        "faredestinationnlc": {
          "type": "string"
        },
        "fareoriginnlc": {
          "type": "string"
        },
        "firstclass": {
          "type": "boolean"
        },
        "standardclass": {
          "type": "boolean"
        },
        "isreturn": {
          "type": "boolean"
        },
        "orderid": {
          "type": "string"
        },
        "numberofadults": {
          "format": "int32",
          "type": "integer"
        },
        "numberofchildren": {
          "format": "int32",
          "type": "integer"
        },
        "numberofrailcards": {
          "format": "int32",
          "type": "integer"
        },
        "railcardcode": {
          "type": "string"
        },
        "outwardarrdatetime": {
          "type": "string"
        },
        "dateoptionofoutwarddateoption": {
          "type": "string"
        },
        "numberofweekofoutwarddateoption": {
          "type": "string"
        },
        "weekdayofoutwarddateoption": {
          "type": "string"
        },
        "outwarddepartafter": {
          "type": "string"
        },
        "outwarddepdatetime": {
          "type": "string"
        },
        "outwardroutecode": {
          "type": "string"
        },
        "outwardtickettype": {
          "type": "string"
        },
        "outwardtime": {
          "type": "string"
        },
        "outwardtotalfarecost": {
          "type": "string"
        },
        "searchpassengerpreferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.SearchPassengerPreference"
          }
        },
        "excessablefares": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "originalfareid": {
          "format": "int32",
          "type": "integer"
        },
        "postaladdressid": {
          "type": "string"
        },
        "proceedpurchase": {
          "type": "string"
        },
        "returnarrdatetime": {
          "type": "string"
        },
        "dateoptionofreturndateoption": {
          "type": "string"
        },
        "numberofweeksofreturndateoption": {
          "type": "string"
        },
        "returntickettype": {
          "type": "string"
        },
        "returndepdatetime": {
          "type": "string"
        },
        "returndepartafter": {
          "type": "string"
        },
        "returnroutecode": {
          "type": "string"
        },
        "returntime": {
          "type": "string"
        },
        "returntotalfarecost": {
          "type": "string"
        },
        "annual": {
          "type": "boolean"
        },
        "monthly": {
          "type": "boolean"
        },
        "weekly": {
          "type": "boolean"
        },
        "custom": {
          "type": "string"
        },
        "grouptype": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.Preferences]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.Preferences"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Preferences.CommunicationPreferences]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.CommunicationPreferences"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.CommunicationPreferences": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.CommunicationPreferenceSettings"
        },
        "confirmover16": {
          "type": "boolean"
        },
        "blacklisted": {
          "type": "boolean"
        },
        "unsubscribed": {
          "type": "boolean"
        },
        "preferencesfound": {
          "type": "boolean"
        },
        "lastmodifieddate": {
          "format": "date-time",
          "type": "string"
        },
        "lastmodifiedsource": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.CommunicationPreferenceSettings": {
      "type": "object",
      "properties": {
        "marketing_inspirational_email": {
          "type": "boolean"
        },
        "marketing_inspirational_post": {
          "type": "boolean"
        },
        "marketing_inspirational_push": {
          "type": "boolean"
        },
        "marketing_products_email": {
          "type": "boolean"
        },
        "marketing_products_post": {
          "type": "boolean"
        },
        "marketing_products_push": {
          "type": "boolean"
        },
        "marketing_offers_email": {
          "type": "boolean"
        },
        "marketing_offers_post": {
          "type": "boolean"
        },
        "marketing_offers_push": {
          "type": "boolean"
        },
        "service_bookings_email": {
          "type": "boolean"
        },
        "service_bookings_post": {
          "type": "boolean"
        },
        "service_bookings_push": {
          "type": "boolean"
        },
        "service_route_email": {
          "type": "boolean"
        },
        "service_route_post": {
          "type": "boolean"
        },
        "service_route_push": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.CommunicationPreferences]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.CommunicationPreferences"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.RemovePreferencesCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.RemovePreferencesCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.RemovePreferencesCriteria": {
      "type": "object",
      "properties": {
        "favouriteid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences": {
      "type": "object",
      "properties": {
        "windows": {
          "type": "boolean"
        },
        "center": {
          "type": "boolean"
        },
        "aisle": {
          "type": "boolean"
        },
        "backwards": {
          "type": "boolean"
        },
        "facing": {
          "type": "boolean"
        },
        "table": {
          "type": "boolean"
        },
        "individual": {
          "type": "boolean"
        },
        "quiet": {
          "type": "boolean"
        },
        "toilet": {
          "type": "boolean"
        },
        "atends": {
          "type": "boolean"
        },
        "airline": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyCard]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyCard"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyCard": {
      "type": "object",
      "properties": {
        "scheme": {
          "enum": [
            "Nectar",
            "Unknown"
          ],
          "type": "string"
        },
        "isblacklisted": {
          "type": "boolean"
        },
        "isoptedin": {
          "type": "boolean"
        },
        "cardnumber": {
          "type": "string"
        },
        "isflyingclubmembership": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.LoyaltyCards.AddLoyaltyCardRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.LoyaltyCards.AddLoyaltyCardRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.LoyaltyCards.AddLoyaltyCardRequest": {
      "type": "object",
      "properties": {
        "eventcontext": {
          "enum": [
            "ExistingUser",
            "Registration"
          ],
          "type": "string"
        },
        "scheme": {
          "enum": [
            "Nectar",
            "Unknown"
          ],
          "type": "string"
        },
        "isblacklisted": {
          "type": "boolean"
        },
        "isoptedin": {
          "type": "boolean"
        },
        "cardnumber": {
          "type": "string"
        },
        "isflyingclubmembership": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyPoint]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyPoint"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyPoint": {
      "type": "object",
      "properties": {
        "offerid": {
          "type": "string"
        },
        "points": {
          "format": "int32",
          "type": "integer"
        },
        "scheme": {
          "enum": [
            "Nectar",
            "Unknown"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.LoyaltyCards.SetLoyaltyCardCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.LoyaltyCards.SetLoyaltyCardCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.LoyaltyCards.SetLoyaltyCardCriteria": {
      "type": "object",
      "properties": {
        "scheme": {
          "enum": [
            "Nectar",
            "Unknown"
          ],
          "type": "string"
        },
        "isoptedin": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyCard]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.LoyaltyCards.LoyaltyCard"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Voucher]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Voucher"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Voucher": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "balance": {
          "type": "string"
        },
        "claimdate": {
          "format": "date-time",
          "type": "string"
        },
        "createddate": {
          "format": "date-time",
          "type": "string"
        },
        "expirydate": {
          "format": "date-time",
          "type": "string"
        },
        "purchasedate": {
          "format": "date-time",
          "type": "string"
        },
        "issingleuse": {
          "type": "boolean"
        },
        "isvouchercancelled": {
          "type": "boolean"
        },
        "routelistid": {
          "format": "int32",
          "type": "integer"
        },
        "ticketlistid": {
          "format": "int32",
          "type": "integer"
        },
        "validfortoccode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.RedeemVoucherCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.RedeemVoucherCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.RedeemVoucherCriteria": {
      "type": "object",
      "properties": {
        "vouchercode": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.RedeemVoucherResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.RedeemVoucherResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.RedeemVoucherResponse": {
      "type": "object",
      "properties": {
        "evoucherid": {
          "type": "string"
        },
        "claimgiftvoucheresult": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Preferences.PhotoCard]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.PhotoCard"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Preferences.PhotoCard": {
      "type": "object",
      "properties": {
        "postcode": {
          "type": "string"
        },
        "photocardid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "initials": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Preferences.PhotoCard]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.PhotoCard"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Basket.SavedJourney]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.SavedJourney"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.SavedJourney": {
      "type": "object",
      "properties": {
        "trip": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TripDetail"
        },
        "createddate": {
          "format": "date-time",
          "type": "string"
        },
        "expirydate": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.OptionalAuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.GetBasketRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.GetBasketRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.GetBasketRequest": {
      "type": "object",
      "properties": {
        "keeppendingreservation": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Basket.GetBasketResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "sessiontoken": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.GetBasketResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.GetBasketResponse": {
      "type": "object",
      "properties": {
        "appliedbookingfees": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.AppliedBookingFee"
        },
        "basketdetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketDetail"
          }
        },
        "basketdelivery": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketDeliveryDetail"
        },
        "state": {
          "type": "string"
        },
        "ischangeofjourney": {
          "type": "boolean"
        },
        "lastupdated": {
          "type": "string"
        },
        "basketdiscount": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketDiscount"
        },
        "basketpaymentdetails": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketPaymentDetails"
        },
        "containsgoldcardfare": {
          "type": "string"
        },
        "deliverycostpence": {
          "format": "int32",
          "type": "integer"
        },
        "nectarpointsearned": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.UserNectarPoint"
          }
        },
        "refundandrebookdetails": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.RefundAndRebookDetails"
        },
        "totalcostpence": {
          "format": "int32",
          "type": "integer"
        },
        "totalcostpencebeforebasketdiscount": {
          "format": "int32",
          "type": "integer"
        },
        "totalcostpenceexcludingdelivery": {
          "format": "int32",
          "type": "integer"
        },
        "totalcostpenceincludingfulfilmentchargesundry": {
          "format": "int32",
          "type": "integer"
        },
        "totalcostpenceminusgiftvouchers": {
          "format": "int32",
          "type": "integer"
        },
        "totalticketcostpence": {
          "format": "int32",
          "type": "integer"
        },
        "totalundiscountedcostpenceincludingdelivery": {
          "format": "int32",
          "type": "integer"
        },
        "totalundiscountedticketcostpence": {
          "format": "int32",
          "type": "integer"
        },
        "iscountinuousauthoritytypepermitted": {
          "type": "boolean"
        },
        "updatecontinuousauthorityid": {
          "format": "int32",
          "type": "integer"
        },
        "basketwatchdog": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.AppliedBookingFee": {
      "type": "object",
      "properties": {
        "basketbookingfees": {
          "format": "int32",
          "type": "integer"
        },
        "journeybookingfees": {
          "format": "int32",
          "type": "integer"
        },
        "maxnumberofpassenger": {
          "format": "int32",
          "type": "integer"
        },
        "numberofjourneys": {
          "format": "int32",
          "type": "integer"
        },
        "passengerbookingfees": {
          "format": "int32",
          "type": "integer"
        },
        "totalbookingfees": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.BasketDetail": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        },
        "trip": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Trip"
        },
        "cost": {
          "format": "int32",
          "type": "integer"
        },
        "ticketcost": {
          "format": "int32",
          "type": "integer"
        },
        "undiscountedcost": {
          "format": "int32",
          "type": "integer"
        },
        "outwardcost": {
          "format": "int32",
          "type": "integer"
        },
        "returncost": {
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "outwarddatetime": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "returndatetime": {
          "type": "string"
        },
        "itsotripnumber": {
          "type": "string"
        },
        "isttsogrouprailcard": {
          "type": "boolean"
        },
        "basketoptionalitems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketOptionalItem"
          }
        },
        "passengerdetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.PassengerDetail"
          }
        },
        "sleeperprefernces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.SleeperPreferenceAttribute"
          }
        },
        "searchpassengergroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.SearchPassengerGroup"
          }
        },
        "sleeperaccommodationsupplements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Supplement"
          }
        },
        "chargeableseatoutward": {
          "type": "boolean"
        },
        "chargeableseatreturn": {
          "type": "boolean"
        },
        "isoutwardoptionalsleeper": {
          "type": "boolean"
        },
        "isoutwardseatforsleepers": {
          "type": "boolean"
        },
        "isoutwardsleeper": {
          "type": "boolean"
        },
        "isreturnoptionalsleeper": {
          "type": "boolean"
        },
        "isreturnseatforsleepers": {
          "type": "boolean"
        },
        "isreturnsleeper": {
          "type": "boolean"
        },
        "isvalidjourney": {
          "type": "boolean"
        },
        "loyaltypointsusedbyinwardfare": {
          "format": "int32",
          "type": "integer"
        },
        "loyaltypointsusedbyoutwardfare": {
          "format": "int32",
          "type": "integer"
        },
        "totalcostpence": {
          "format": "int32",
          "type": "integer"
        },
        "totalticketcostpence": {
          "format": "int32",
          "type": "integer"
        },
        "totalundiscountedcostpence": {
          "format": "int32",
          "type": "integer"
        },
        "totalundiscountedoutwardcostpence": {
          "format": "int32",
          "type": "integer"
        },
        "totalundiscountedreturncostpence": {
          "format": "int32",
          "type": "integer"
        },
        "adminfee": {
          "format": "int32",
          "type": "integer"
        },
        "tripindex": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.BasketDeliveryDetail": {
      "type": "object",
      "properties": {
        "deliverycost": {
          "type": "string"
        },
        "todlocationnlc": {
          "type": "string"
        },
        "mobilephonenumber": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Address"
        },
        "itsocardisrn": {
          "type": "string"
        },
        "mobiledeviceid": {
          "type": "string"
        },
        "itsosmartcardpassengerdetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.SmartCardPassengerDetail"
          }
        },
        "isset": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.DeliveryOption"
        },
        "selecteddeliveryoption": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.DeliveryOption"
        },
        "itsosmartcarddetails": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.ItsoSmartcardDetails"
        },
        "storedeliveryaddress": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.BasketDiscount": {
      "type": "object",
      "properties": {
        "basketdiscountamountinpence": {
          "format": "int32",
          "type": "integer"
        },
        "maximumspend": {
          "format": "int32",
          "type": "integer"
        },
        "maximumspendexceeded": {
          "type": "boolean"
        },
        "minimumspend": {
          "format": "int32",
          "type": "integer"
        },
        "minimumspendachieved": {
          "type": "boolean"
        },
        "showtopupmessage": {
          "type": "boolean"
        },
        "topupmessage": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.BasketPaymentDetails": {
      "type": "object",
      "properties": {
        "deferfulfilmentuntil": {
          "type": "string"
        },
        "evouchers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.EVoucher"
          }
        },
        "loyaltypointpence": {
          "format": "int32",
          "type": "integer"
        },
        "onlinepaymentdetails": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.OnlinePaymentDetails"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.UserNectarPoint": {
      "type": "object",
      "properties": {
        "allocationtype": {
          "type": "string"
        },
        "awardtype": {
          "type": "string"
        },
        "bankedpoints": {
          "format": "int32",
          "type": "integer"
        },
        "nectarruleid": {
          "format": "int32",
          "type": "integer"
        },
        "offercode": {
          "type": "string"
        },
        "tripno": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.RefundAndRebookDetails": {
      "type": "object",
      "properties": {
        "refundallowed": {
          "type": "boolean"
        },
        "refundandrebookruleid": {
          "format": "int32",
          "type": "integer"
        },
        "refundpence": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Trip": {
      "type": "object",
      "properties": {
        "additionalfulfilmentid": {
          "type": "string"
        },
        "containssleeperservice": {
          "type": "boolean"
        },
        "destination": {
          "type": "string"
        },
        "enquirymethod": {
          "type": "string"
        },
        "enquiryparameters": {
          "type": "string"
        },
        "fulfilmentid": {
          "format": "int32",
          "type": "integer"
        },
        "goldcardorderid": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "string"
        },
        "outwarddatetime": {
          "type": "string"
        },
        "returndatetime": {
          "type": "string"
        },
        "totalcost": {
          "format": "int32",
          "type": "integer"
        },
        "totalsavingsmade": {
          "format": "int32",
          "type": "integer"
        },
        "parentorderid": {
          "format": "int32",
          "type": "integer"
        },
        "journeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketJourney"
          }
        },
        "sundries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Sundry"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.BasketOptionalItem": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cost": {
          "format": "int32",
          "type": "integer"
        },
        "numberofadults": {
          "format": "int32",
          "type": "integer"
        },
        "numberofchildren": {
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "additionaloption": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.AdditionalOption"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.PassengerDetail": {
      "type": "object",
      "properties": {
        "iddetails": {
          "type": "string"
        },
        "idname": {
          "type": "string"
        },
        "isadult": {
          "type": "string"
        },
        "isleadpassenger": {
          "type": "string"
        },
        "railcardcode": {
          "type": "string"
        },
        "rspidtype": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.SleeperPreferenceAttribute": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.SearchPassengerGroup": {
      "type": "object",
      "properties": {
        "numberofadults": {
          "format": "int32",
          "type": "integer"
        },
        "numberofchildren": {
          "format": "int32",
          "type": "integer"
        },
        "numberofrailcards": {
          "format": "int32",
          "type": "integer"
        },
        "originalfareid": {
          "format": "int32",
          "type": "integer"
        },
        "railcardcode": {
          "type": "string"
        },
        "railcarddescription": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.SmartCardPassengerDetail": {
      "type": "object",
      "properties": {
        "adultchild": {
          "type": "string"
        },
        "itsotripno": {
          "format": "int32",
          "type": "integer"
        },
        "smartcardid": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.DeliveryOption": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "tod": {
          "type": "string"
        },
        "post": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "selfprint": {
          "type": "string"
        },
        "deliveryinstruction": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayname": {
          "type": "string"
        },
        "postagefeesapply": {
          "type": "boolean"
        },
        "fulfilmenttype": {
          "enum": [
            "TicketOnDeparture",
            "LocalTicketOnDeparture",
            "Post",
            "Mobile",
            "ETicket",
            "PrintAtHome",
            "RemoteSmartCard",
            "External",
            "Smartcard",
            "TransitHub",
            "All",
            "Unknown",
            "Direct"
          ],
          "type": "string"
        },
        "fulfilmenttypename": {
          "type": "string"
        },
        "isavailableforfree": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nectarloyaltypointsfordeliveryoption": {
          "format": "int32",
          "type": "integer"
        },
        "usertypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.UserTypeDeliveryDetail"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.ItsoSmartcardDetails": {
      "type": "object",
      "properties": {
        "locationnlc": {
          "type": "string"
        },
        "userid": {
          "format": "int32",
          "type": "integer"
        },
        "windowstartdate": {
          "type": "string"
        },
        "windowperiod": {
          "format": "int32",
          "type": "integer"
        },
        "discountentitlement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.DiscountEntitlement"
          }
        },
        "remainingspace": {
          "format": "int32",
          "type": "integer"
        },
        "entitlement": {
          "type": "string"
        },
        "entitlementexpiry": {
          "type": "string"
        },
        "cardexpiry": {
          "type": "string"
        },
        "carddescription": {
          "type": "string"
        },
        "nameoncard": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "concessionaryclass": {
          "type": "string"
        },
        "isphotocardenabled": {
          "type": "boolean"
        },
        "isrn": {
          "type": "string"
        },
        "photocardid": {
          "type": "string"
        },
        "isdefault": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.EVoucher": {
      "type": "object",
      "properties": {
        "balance": {
          "format": "int32",
          "type": "integer"
        },
        "claimdate": {
          "format": "date-time",
          "type": "string"
        },
        "createddate": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "giftvouchercode": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "issingleuse": {
          "type": "boolean"
        },
        "isvouchercancelled": {
          "type": "boolean"
        },
        "purchasedate": {
          "format": "date-time",
          "type": "string"
        },
        "validfortoccode": {
          "type": "string"
        },
        "value": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.OnlinePaymentDetails": {
      "type": "object",
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "paymenttype": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.BasketJourney": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "accommodationsupplements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Supplement"
          }
        },
        "addon": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "destinationgroup": {
          "type": "string"
        },
        "discounttypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.DiscountType"
          }
        },
        "enquiry": {
          "type": "string"
        },
        "faretimetableavailability": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.FareTimeAvailability"
          }
        },
        "fares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Fares"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.BasketLocation"
          }
        },
        "origin": {
          "type": "string"
        },
        "origingroup": {
          "type": "string"
        },
        "outward": {
          "type": "string"
        },
        "outwardtimetablejourneys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TimeTableJourney"
          }
        },
        "outwarddeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "passengers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.PassengerGroup"
          }
        },
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Reservation"
          }
        },
        "returndeparturedate": {
          "format": "date-time",
          "type": "string"
        },
        "returntimetablejourneys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TimeTableJourney"
          }
        },
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.Route"
          }
        },
        "status": {
          "type": "string"
        },
        "tickettypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.TicketTypeDetail"
          }
        },
        "totalcost": {
          "format": "int32",
          "type": "integer"
        },
        "numberofflexiseasonpasses": {
          "format": "int32",
          "type": "integer"
        },
        "carbonfootprintcalculation": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.CarbonFootprintCalculation"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.AdditionalOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "directiontype": {
          "type": "string"
        },
        "zonedetailitem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.ZoneDetailItem"
          }
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.UserTypeDeliveryDetail": {
      "type": "object",
      "properties": {
        "lowlevelprice": {
          "format": "int32",
          "type": "integer"
        },
        "usermembershiptype": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.DiscountEntitlement": {
      "type": "object",
      "properties": {
        "discountidentifier": {
          "format": "int32",
          "type": "integer"
        },
        "entitlementcode": {
          "enum": [
            "Adult",
            "Child"
          ],
          "type": "string"
        },
        "discountconcessionaryclasscode": {
          "type": "string"
        },
        "expirydate": {
          "format": "date-time",
          "type": "string"
        },
        "operatorid": {
          "format": "int32",
          "type": "integer"
        },
        "isrn": {
          "type": "string"
        },
        "railcardcode": {
          "type": "string"
        },
        "userid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.BasketLocation": {
      "type": "object",
      "properties": {
        "crs": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "grouplocation": {
          "type": "string"
        },
        "nlc": {
          "type": "string"
        },
        "shortdescription": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.Reservation": {
      "type": "object",
      "properties": {
        "aftersales": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.AfterSale"
          }
        },
        "direction": {
          "type": "string"
        },
        "places": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Place"
          }
        },
        "placesoverbooked": {
          "format": "int32",
          "type": "integer"
        },
        "placesreserved": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "Seat",
            "Bike",
            "Berth",
            "Unknown"
          ],
          "type": "string"
        },
        "timetablejourneyid": {
          "format": "int32",
          "type": "integer"
        },
        "timetablelegid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.CarbonFootprintCalculation": {
      "type": "object",
      "properties": {
        "trainco2usage": {
          "format": "double",
          "type": "number"
        },
        "carco2usage": {
          "format": "double",
          "type": "number"
        },
        "percentofemissionsaving": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.ZoneDetailItem": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "offpeakrestrictedcostpence": {
          "type": "string"
        },
        "offpeakrestrictedfareid": {
          "type": "string"
        },
        "offpeakunrestrictedcostpence": {
          "type": "string"
        },
        "offpeakunrestrictedfareid": {
          "type": "string"
        },
        "peakfarecostpence": {
          "type": "string"
        },
        "peakfareid": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Bookings.AfterSale": {
      "type": "object",
      "properties": {
        "datetime": {
          "format": "date-time",
          "type": "string"
        },
        "neworderid": {
          "format": "int32",
          "type": "integer"
        },
        "nooverbookedplaces": {
          "format": "int32",
          "type": "integer"
        },
        "noplaces": {
          "format": "int32",
          "type": "integer"
        },
        "places": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Place"
          }
        },
        "referenceid": {
          "format": "int32",
          "type": "integer"
        },
        "userid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.AddToBasketCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.AddToBasketCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.AddToBasketCriteria": {
      "type": "object",
      "properties": {
        "outwardfaregroup": {
          "type": "string"
        },
        "outwardserviceid": {
          "type": "string"
        },
        "returnfaregroup": {
          "type": "string"
        },
        "returnserviceid": {
          "type": "string"
        },
        "favouritejourneyname": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.AddToBasketResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.AddToBasketResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.AddToBasketResponse": {
      "type": "object",
      "properties": {
        "basketmessage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketMessage"
          }
        },
        "basketwatchdog": {
          "type": "string"
        },
        "errormessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tripno": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.BasketMessage": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.RemoveFromBasketCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.RemoveFromBasketCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.RemoveFromBasketCriteria": {
      "type": "object",
      "properties": {
        "tripnumber": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.RemoveFromBasketResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.RemoveFromBasketResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.RemoveFromBasketResponse": {
      "type": "object",
      "properties": {
        "basketwatchdog": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.GetBasketHandoffCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.GetBasketHandoffCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.GetBasketHandoffCriteria": {
      "type": "object",
      "properties": {
        "returnurlquerytoken": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.GetBasketHandoffResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.GetBasketHandoffResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.GetBasketHandoffResponse": {
      "type": "object",
      "properties": {
        "handoffurl": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetAddonCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.GetAddonCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.GetAddonCriteria": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetAddonResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.GetAddonResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.GetAddonResponse": {
      "type": "object",
      "properties": {
        "basketwatchdog": {
          "type": "string"
        },
        "additionaloptionitems": {
          "type": "object"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetAddonCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.SetAddonCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.SetAddonCriteria": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        },
        "additionaloptionitemselections": {
          "type": "object"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetAddonResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.SetAddonResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.SetAddonResponse": {
      "type": "object",
      "properties": {
        "basketmessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketMessage"
          }
        },
        "basketwatchdog": {
          "type": "string"
        },
        "errormessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetTravelCardPassengersCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.SetTravelCardPassengersCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.SetTravelCardPassengersCriteria": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        },
        "passengergroups": {
          "type": "object"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetTravelCardPassengersResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.SetTravelCardPassengersResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.SetTravelCardPassengersResponse": {
      "type": "object",
      "properties": {
        "basketwatchdog": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetReservationCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.GetReservationCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.GetReservationCriteria": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetReservationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.GetReservationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.GetReservationResponse": {
      "type": "object",
      "properties": {
        "outward": {
          "type": "string"
        },
        "return": {
          "type": "string"
        },
        "isareturnjourney": {
          "type": "boolean"
        },
        "twosinglesasareturn": {
          "type": "boolean"
        },
        "basketstate": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.MakeReservationCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.MakeReservationCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.MakeReservationCriteria": {
      "type": "object",
      "properties": {
        "tripno": {
          "type": "string"
        },
        "reserveoutward": {
          "type": "boolean"
        },
        "reserveinward": {
          "type": "boolean"
        },
        "numberofbicycles": {
          "format": "int32",
          "type": "integer"
        },
        "numberofwheelchairs": {
          "format": "int32",
          "type": "integer"
        },
        "bicyclereservationsonly": {
          "type": "boolean"
        },
        "seatpreferences": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "countrycode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "faxnumber": {
          "type": "string"
        },
        "forename": {
          "type": "string"
        },
        "homenumber": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "initials": {
          "type": "string"
        },
        "phonenumber": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "seasondbcustomerid": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "inwardsupplementcodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outwardsupplementcodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sleeperpreferences": {
          "type": "object"
        },
        "sleeperoutwardsupplementid": {
          "format": "int32",
          "type": "integer"
        },
        "sleeperinwardsupplementid": {
          "format": "int32",
          "type": "integer"
        },
        "under5s": {
          "format": "int32",
          "type": "integer"
        },
        "keepreservations": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.MakeReservationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.MakeReservationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.MakeReservationResponse": {
      "type": "object",
      "properties": {
        "basketwatchdog": {
          "type": "string"
        },
        "information": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.ReservationInfo"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.ReservationInfo": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        },
        "nrsnotavailable": {
          "type": "string"
        },
        "seatnotavailable": {
          "type": "string"
        },
        "sleepernotavailable": {
          "type": "string"
        },
        "pricepromisereservationfailed": {
          "type": "string"
        },
        "bicyclereservationnotavailable": {
          "type": "string"
        },
        "defaultreservationnotattempted": {
          "type": "string"
        },
        "seatingpreferencesnotmet": {
          "type": "string"
        },
        "storeorderfailed": {
          "type": "string"
        },
        "confirmationemailfailed": {
          "type": "string"
        },
        "cancelseatreservationsfailed": {
          "type": "string"
        },
        "cancelbicyclereservationsfailed": {
          "type": "string"
        },
        "amendreservationsfailed": {
          "type": "string"
        },
        "makereservationsfailed": {
          "type": "string"
        },
        "returnbeforeoutward": {
          "type": "string"
        },
        "sleeperpreferencesnotmet": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.UpdateSleeperReservationCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.UpdateSleeperReservationCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.UpdateSleeperReservationCriteria": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        },
        "reservations": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Reservations"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Reservations": {
      "type": "object",
      "properties": {
        "trainreservation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.TrainReservation"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.TrainReservation": {
      "type": "object",
      "properties": {
        "trainid": {
          "type": "string"
        },
        "places": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Place"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperSupplementsCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperSupplementsCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperSupplementsCriteria": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperSupplementsResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperSupplementsResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperSupplementsResponse": {
      "type": "object",
      "properties": {
        "sleepersupplements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.SleeperSupplement"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.SleeperSupplement": {
      "type": "object",
      "properties": {
        "sleepersupplementid": {
          "format": "int32",
          "type": "integer"
        },
        "cost": {
          "format": "int32",
          "type": "integer"
        },
        "direction": {
          "enum": [
            "Outward",
            "Return",
            "Both",
            "Unknown"
          ],
          "type": "string"
        },
        "supplements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Supplement"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.GetSleeperBerthsCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.GetSleeperBerthsCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.GetSleeperBerthsCriteria": {
      "type": "object",
      "properties": {
        "timetableleg": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.TimeTableLeg"
        },
        "coachletter": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.TimeTableLeg": {
      "type": "object",
      "properties": {
        "arrivalstation": {
          "type": "string"
        },
        "arrivalstoptype": {
          "type": "string"
        },
        "arrivaltime": {
          "format": "date-time",
          "type": "string"
        },
        "catering": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.TimeTableFacility"
          }
        },
        "countedplaces": {
          "type": "string"
        },
        "departurestation": {
          "type": "string"
        },
        "departurestoptype": {
          "type": "string"
        },
        "departuretime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mileage": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        },
        "reservable": {
          "type": "string"
        },
        "retailtrainid": {
          "type": "string"
        },
        "seatclass": {
          "type": "string"
        },
        "sleeperclass": {
          "type": "string"
        },
        "toc": {
          "type": "string"
        },
        "tocname": {
          "type": "string"
        },
        "timetablesource": {
          "type": "string"
        },
        "trainarrivaltime": {
          "format": "date-time",
          "type": "string"
        },
        "traindestination": {
          "type": "string"
        },
        "trainid": {
          "type": "string"
        },
        "trainorigin": {
          "type": "string"
        },
        "trainstarttime": {
          "format": "date-time",
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.TimeTableFacility": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperBerthsResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperBerthsResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSleeperBerthsResponse": {
      "type": "object",
      "properties": {
        "coachsleepers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.CoachSleeper"
          }
        },
        "coachletter": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.CoachSleeper": {
      "type": "object",
      "properties": {
        "place": {
          "type": "string"
        },
        "berthattribute": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetSelfPrintPassengersCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.SetSelfPrintPassengersCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.SetSelfPrintPassengersCriteria": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        },
        "selfprintpassengers": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.SelfPrintPassengers"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.SelfPrintPassengers": {
      "type": "object",
      "properties": {
        "passengerdetail": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.PassengerDetail"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.SetSelfPrintPassengersResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.SetSelfPrintPassengersResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.SetSelfPrintPassengersResponse": {
      "type": "object",
      "properties": {
        "basketwatchdog": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSeatAttributesCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSeatAttributesCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSeatAttributesCriteria": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSeatAttributesResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSeatAttributesResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.GetSeatAttributesResponse": {
      "type": "object",
      "properties": {
        "seatattributes": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.GetApplicableDeliveryOptionsCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.GetApplicableDeliveryOptionsCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.GetApplicableDeliveryOptionsCriteria": {
      "type": "object",
      "properties": {
        "corporateid": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Basket.GetApplicableDeliveryOptionsResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "sessiontoken": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.GetApplicableDeliveryOptionsResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.GetApplicableDeliveryOptionsResponse": {
      "type": "object",
      "properties": {
        "deliveryoptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.DeliveryOption"
          }
        },
        "itsosmartcarddetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.ItsoSmartCardDetail"
          }
        },
        "isgoldcardfare": {
          "type": "boolean"
        },
        "additionalpassengersisrnsrequired": {
          "type": "boolean"
        },
        "itsolocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.StationResult"
          }
        },
        "basketmessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketMessage"
          }
        },
        "errormessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.ItsoSmartCardDetail": {
      "type": "object",
      "properties": {
        "locationnlc": {
          "type": "string"
        },
        "userid": {
          "format": "int32",
          "type": "integer"
        },
        "windowstartdate": {
          "type": "string"
        },
        "windowperiod": {
          "format": "int32",
          "type": "integer"
        },
        "discountentitlement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.DiscountEntitlement"
          }
        },
        "remainingspace": {
          "format": "int32",
          "type": "integer"
        },
        "entitlement": {
          "enum": [
            "Adult",
            "Child"
          ],
          "type": "string"
        },
        "entitlementexpiry": {
          "format": "date-time",
          "type": "string"
        },
        "cardexpiry": {
          "format": "date-time",
          "type": "string"
        },
        "carddescription": {
          "type": "string"
        },
        "nameoncard": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Unknown",
            "Acknowledged",
            "Accepted",
            "Rejected",
            "Active",
            "Hotlisted",
            "Expired"
          ],
          "type": "string"
        },
        "concessionaryclass": {
          "enum": [
            "Adult",
            "Child",
            "Staff",
            "Scholar"
          ],
          "type": "string"
        },
        "isphotodardenabled": {
          "type": "boolean"
        },
        "isrn": {
          "type": "string"
        },
        "photocardid": {
          "type": "string"
        },
        "isdefault": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.StationResult": {
      "type": "object",
      "properties": {
        "crs": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayname": {
          "type": "string"
        },
        "nlc": {
          "type": "string"
        },
        "todavailability": {
          "type": "string"
        },
        "todcontactinfo": {
          "type": "string"
        },
        "todlocationinfo": {
          "type": "string"
        },
        "vendorservedflag": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.SetApplicableDeliveryOptionsCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.SetApplicableDeliveryOptionsCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.SetApplicableDeliveryOptionsCriteria": {
      "type": "object",
      "properties": {
        "deliveryoptionid": {
          "format": "int32",
          "type": "integer"
        },
        "todlocationnlc": {
          "type": "string"
        },
        "mobiledeviceid": {
          "type": "string"
        },
        "itsoisrn": {
          "type": "string"
        },
        "itsocollectiondate": {
          "type": "string"
        },
        "rememberdeliveryaddress": {
          "type": "boolean"
        },
        "deliveryaddress": {
          "type": "object"
        },
        "itsosmartcardpassengerdetails": {
          "type": "object"
        },
        "othercard": {
          "type": "boolean"
        },
        "rememberthiscard": {
          "type": "boolean"
        },
        "nickname": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.SetApplicableDeliveryOptionsResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.SetApplicableDeliveryOptionsResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.SetApplicableDeliveryOptionsResponse": {
      "type": "object",
      "properties": {
        "basketwatchdog": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.DeliveryOptions.SetETicketPassengersDetailsRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.DeliveryOptions.SetETicketPassengersDetailsRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.DeliveryOptions.SetETicketPassengersDetailsRequest": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        },
        "eticketpassengers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.PassengerDetail"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.DeliveryOptions.SetETicketPassengersDetailsResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.DeliveryOptions.SetETicketPassengersDetailsResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.DeliveryOptions.SetETicketPassengersDetailsResponse": {
      "type": "object",
      "properties": {
        "basketwatchdog": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.ValidateBasketCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.ValidateBasketCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.ValidateBasketCriteria": {
      "type": "object",
      "properties": {
        "basketwatchdog": {
          "type": "string"
        },
        "agreedtotermsandconditions": {
          "type": "boolean"
        },
        "newcontinuousauthorityrequested": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.ValidateBasketResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.ValidateBasketResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.ValidateBasketResponse": {
      "type": "object",
      "properties": {
        "basketmessages": {
          "type": "object"
        },
        "errormessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isbasketvalid": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.Journey.CheckBasketJourneysStatusResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.Journey.CheckBasketJourneysStatusResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.Journey.CheckBasketJourneysStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Ok",
            "Cancelled",
            "Delayed"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.ResendConfirmationEmailCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.ResendConfirmationEmailCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.ResendConfirmationEmailCriteria": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "orderid": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetExternalPurchaseReservationsRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetExternalPurchaseReservationsRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetExternalPurchaseReservationsRequest": {
      "type": "object",
      "properties": {
        "tripno": {
          "type": "string"
        },
        "reserveoutward": {
          "type": "boolean"
        },
        "reserveinward": {
          "type": "boolean"
        },
        "seatpreferences": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences"
        },
        "numberofbicycles": {
          "format": "int32",
          "type": "integer"
        },
        "bicyclereservationsonly": {
          "type": "boolean"
        },
        "emailid": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetExternalPurchaseReservationsResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetExternalPurchaseReservationsResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetExternalPurchaseReservationsResponse": {
      "type": "object",
      "properties": {
        "basketwatchdog": {
          "type": "string"
        },
        "reservationresult": {
          "type": "string"
        },
        "bookingreference": {
          "type": "string"
        },
        "orderid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetMakeReservationRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetMakeReservationRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetMakeReservationRequest": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetMakeReservationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetMakeReservationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetMakeReservationResponse": {
      "type": "object",
      "properties": {
        "outwardreservationpossible": {
          "type": "boolean"
        },
        "returnreservationpossible": {
          "type": "boolean"
        },
        "maximumnumberofbicyclereservatons": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetMakeReservationRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetMakeReservationRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetMakeReservationRequest": {
      "type": "object",
      "properties": {
        "bookingreference": {
          "type": "string"
        },
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "seatpreferences": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences"
        },
        "outwardrequired": {
          "type": "boolean"
        },
        "returnrequired": {
          "type": "boolean"
        },
        "outwardserviceid": {
          "type": "string"
        },
        "returnserviceid": {
          "type": "string"
        },
        "bicyclereservationsonly": {
          "type": "boolean"
        },
        "totalnumberofbicyclereservationsrequired": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetMakeReservationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetMakeReservationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetMakeReservationResponse": {
      "type": "object",
      "properties": {
        "reservationresult": {
          "type": "string"
        },
        "amendedorder": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.PurchaseDetails"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetTicketValidityRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetTicketValidityRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetTicketValidityRequest": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "outwarddatetime": {
          "format": "date-time",
          "type": "string"
        },
        "returndatetime": {
          "format": "date-time",
          "type": "string"
        },
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetTicketValidityResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetTicketValidityResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetTicketValidityResponse": {
      "type": "object",
      "properties": {
        "complete": {
          "type": "boolean"
        },
        "enquiryid": {
          "type": "string"
        },
        "allservicesdone": {
          "type": "boolean"
        },
        "outwardservices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Service"
          }
        },
        "inwardservices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Service"
          }
        },
        "tocs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Toc"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.OutputLocation"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Service": {
      "type": "object",
      "properties": {
        "name": {
          "format": "int32",
          "type": "integer"
        },
        "providerref": {
          "type": "string"
        },
        "out": {
          "type": "boolean"
        },
        "locfrom": {
          "type": "string"
        },
        "locto": {
          "type": "string"
        },
        "arrdatetime": {
          "format": "date-time",
          "type": "string"
        },
        "depdatetime": {
          "format": "date-time",
          "type": "string"
        },
        "changes": {
          "format": "int32",
          "type": "integer"
        },
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "issel": {
          "type": "boolean"
        },
        "isbus": {
          "type": "boolean"
        },
        "warning": {
          "type": "boolean"
        },
        "mileageinhundredthsofmile": {
          "format": "int32",
          "type": "integer"
        },
        "firstinday": {
          "type": "boolean"
        },
        "lastinday": {
          "type": "boolean"
        },
        "iscmsmatch": {
          "type": "boolean"
        },
        "isservicedisrupted": {
          "type": "boolean"
        },
        "islongconnectiontimewarn": {
          "type": "boolean"
        },
        "isgroupsaveservice": {
          "type": "boolean"
        },
        "haslongconnection": {
          "type": "boolean"
        },
        "offpeakstatus": {
          "type": "string"
        },
        "lowestsingle": {
          "format": "int32",
          "type": "integer"
        },
        "railjourneydetail": {
          "type": "string"
        },
        "routes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "servicelegs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Leg"
          }
        },
        "cancelledleg": {
          "type": "boolean"
        },
        "_servicefares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.ServiceFare"
          }
        },
        "_cheapestreturnfarecost": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.FareCost"
        },
        "_cheapestsinglefarecost": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.FareCost"
        },
        "_flag": {
          "type": "string"
        },
        "_is_nectar_bonus": {
          "type": "boolean"
        },
        "_is_overtaken": {
          "type": "boolean"
        },
        "_isselectable": {
          "type": "boolean"
        },
        "_status": {
          "type": "string"
        },
        "carbonfootprintcalculation": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.CarbonFootprintCalculation"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Toc": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.OutputLocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "nlc": {
          "type": "string"
        },
        "isfgw": {
          "type": "boolean"
        },
        "isgroup": {
          "type": "boolean"
        },
        "isalias": {
          "type": "boolean"
        },
        "tod": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Leg": {
      "type": "object",
      "properties": {
        "snlc": {
          "type": "string"
        },
        "sname": {
          "type": "string"
        },
        "dtime": {
          "type": "string"
        },
        "enlc": {
          "type": "string"
        },
        "ename": {
          "type": "string"
        },
        "atime": {
          "type": "string"
        },
        "onlc": {
          "type": "string"
        },
        "oname": {
          "type": "string"
        },
        "dnlc": {
          "type": "string"
        },
        "dname": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "modetype": {
          "type": "string"
        },
        "rsv": {
          "type": "string"
        },
        "sclass": {
          "type": "string"
        },
        "bclass": {
          "type": "string"
        },
        "showwifiicon": {
          "type": "string"
        },
        "isservicedisrupted": {
          "type": "string"
        },
        "haslongconnection": {
          "type": "string"
        },
        "disruptioninfo": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Disruption"
        },
        "uid": {
          "type": "string"
        },
        "rid": {
          "type": "string"
        },
        "toccode": {
          "type": "string"
        },
        "tocdesc": {
          "type": "string"
        },
        "tocurl": {
          "type": "string"
        },
        "cater": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "legcancelled": {
          "type": "boolean"
        },
        "dexpecteddatetime": {
          "format": "date-time",
          "type": "string"
        },
        "dnotstopping": {
          "type": "boolean"
        },
        "eexpecteddatetime": {
          "format": "date-time",
          "type": "string"
        },
        "enotstopping": {
          "type": "boolean"
        },
        "nrenotices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.NreNotice"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.ServiceFare": {
      "type": "object",
      "properties": {
        "serviceid": {
          "format": "int32",
          "type": "integer"
        },
        "faregroupid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isreturn": {
          "type": "boolean"
        },
        "fareclass": {
          "type": "string"
        },
        "farecost": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.FareCost"
        },
        "flag": {
          "type": "string"
        },
        "tooltip": {
          "type": "string"
        },
        "infourl": {
          "type": "string"
        },
        "destinationinfo": {
          "type": "string"
        },
        "railcards": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "routedescription": {
          "type": "string"
        },
        "termsconditions": {
          "type": "string"
        },
        "nectarpointsticket": {
          "format": "int32",
          "type": "integer"
        },
        "nectarpointsbonus": {
          "format": "int32",
          "type": "integer"
        },
        "destinationnlc": {
          "type": "string"
        },
        "originnlc": {
          "type": "string"
        },
        "faretoccode": {
          "type": "string"
        },
        "fareids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nectarloyaltypointsforticket": {
          "type": "string"
        },
        "isstandardruleapplicablefortickettype": {
          "type": "boolean"
        },
        "totalfare": {
          "format": "int32",
          "type": "integer"
        },
        "spaces": {
          "format": "int32",
          "type": "integer"
        },
        "issmartcardfare": {
          "type": "boolean"
        },
        "nectarloyaltypointsforfirstclassupgrade": {
          "type": "string"
        },
        "isnectarmaxlimitreachedforfirstclassupgrade": {
          "type": "boolean"
        },
        "isstandardruleapplicableforfirstclassupgrade": {
          "type": "boolean"
        },
        "nectarloyaltyfirstclassupgraderuleid": {
          "type": "string"
        },
        "upgradefaregroupid": {
          "type": "string"
        },
        "firstclassruleremaininglimit": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.FareCost": {
      "type": "object",
      "properties": {
        "totalfare": {
          "format": "int32",
          "type": "integer"
        },
        "isreturn": {
          "type": "boolean"
        },
        "serviceid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Disruption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "disruptionreason": {
          "type": "string"
        },
        "delaydescription": {
          "type": "string"
        },
        "delayadditionalinformation": {
          "type": "string"
        },
        "delaypublished": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.NreNotice": {
      "type": "object",
      "properties": {
        "noticetype": {
          "type": "string"
        },
        "noticereference": {
          "type": "string"
        },
        "noticeheader": {
          "type": "string"
        },
        "noticetext": {
          "type": "string"
        },
        "noticeurl": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetAmendReservationRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetAmendReservationRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetAmendReservationRequest": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetAmendReservationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetAmendReservationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetAmendReservationResponse": {
      "type": "object",
      "properties": {
        "outwardsameservicespossible": {
          "type": "boolean"
        },
        "returnsameservicespossible": {
          "type": "boolean"
        },
        "outwardnewservicespossible": {
          "type": "boolean"
        },
        "returnnewservicespossible": {
          "type": "boolean"
        },
        "outwardamendbicyclespossible": {
          "type": "boolean"
        },
        "returnamendbicyclespossible": {
          "type": "boolean"
        },
        "outwardcurrentnumberofbicyclereservatons": {
          "format": "int32",
          "type": "integer"
        },
        "returncurrentnumberofbicyclereservatons": {
          "format": "int32",
          "type": "integer"
        },
        "maximumnumberofbicyclereservatons": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetAmendReservationRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetAmendReservationRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetAmendReservationRequest": {
      "type": "object",
      "properties": {
        "bookingreference": {
          "type": "string"
        },
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "seatpreferences": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Preferences.SeatPreferences"
        },
        "outwardrequired": {
          "type": "boolean"
        },
        "returnrequired": {
          "type": "boolean"
        },
        "outwardserviceid": {
          "type": "string"
        },
        "returnserviceid": {
          "type": "string"
        },
        "bicyclereservationsonly": {
          "type": "boolean"
        },
        "totalnumberofbicyclereservationsrequired": {
          "format": "int32",
          "type": "integer"
        },
        "amendreservationsmode": {
          "type": "string"
        },
        "newservicesbicyclereservationsessential": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetAmendReservationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetAmendReservationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetAmendReservationResponse": {
      "type": "object",
      "properties": {
        "reservationresult": {
          "type": "string"
        },
        "amendedorder": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.PurchaseDetails"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetReservationServicesResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetReservationServicesResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetReservationServicesResponse": {
      "type": "object",
      "properties": {
        "complete": {
          "type": "boolean"
        },
        "allservicesdone": {
          "type": "boolean"
        },
        "outwardservices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.ReservationService"
          }
        },
        "inwardservices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.ReservationService"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.ReservationService": {
      "type": "object",
      "properties": {
        "name": {
          "format": "int32",
          "type": "integer"
        },
        "providerref": {
          "type": "string"
        },
        "arrdatetime": {
          "format": "date-time",
          "type": "string"
        },
        "depdatetime": {
          "format": "date-time",
          "type": "string"
        },
        "changes": {
          "format": "int32",
          "type": "integer"
        },
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "isbus": {
          "type": "boolean"
        },
        "warning": {
          "type": "boolean"
        },
        "railjourneydetail": {
          "type": "string"
        },
        "_is_overtaken": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetCancelReservationRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetCancelReservationRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetCancelReservationRequest": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetCancelReservationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetCancelReservationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetCancelReservationResponse": {
      "type": "object",
      "properties": {
        "outwardcancellationpossible": {
          "type": "boolean"
        },
        "returncancellationpossible": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetCancelReservationRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetCancelReservationRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetCancelReservationRequest": {
      "type": "object",
      "properties": {
        "bookingreference": {
          "type": "string"
        },
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "outwardrequired": {
          "type": "boolean"
        },
        "returnrequired": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetCancelReservationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetCancelReservationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.SetCancelReservationResponse": {
      "type": "object",
      "properties": {
        "cancellationsuccess": {
          "type": "string"
        },
        "amendedorder": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Bookings.PurchaseDetails"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.StartOfflineReservationResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.StartOfflineReservationResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.StartOfflineReservationResponse": {
      "type": "object",
      "properties": {
        "tripno": {
          "format": "int32",
          "type": "integer"
        },
        "outwardtimetablereservable": {
          "type": "boolean"
        },
        "outwardbikereservables": {
          "type": "boolean"
        },
        "returntimetablereservable": {
          "type": "boolean"
        },
        "returnbikereservables": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.ReserveSeatRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.ReserveSeatRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.ReserveSeatRequest": {
      "type": "object",
      "properties": {
        "successurl": {
          "type": "string"
        },
        "failureurl": {
          "type": "string"
        },
        "cancelurl": {
          "type": "string"
        },
        "tripno": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.ReserveSeatResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.ReserveSeatResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.ReserveSeatResponse": {
      "type": "object",
      "properties": {
        "seatmapsurl": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Basket.CheckJourneyReservablesRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.CheckJourneyReservablesRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.CheckJourneyReservablesRequest": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Basket.CheckJourneyReservablesResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.CheckJourneyReservablesResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Basket.CheckJourneyReservablesResponse": {
      "type": "object",
      "properties": {
        "outwardtimetablereservable": {
          "type": "boolean"
        },
        "outwardbikereservables": {
          "type": "boolean"
        },
        "returntimetablereservable": {
          "type": "boolean"
        },
        "returnbikereservables": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardRequest": {
      "type": "object",
      "properties": {
        "isrn": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardResponse": {
      "type": "object",
      "properties": {
        "usersmartcard": {
          "type": "object"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardsResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardsResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardsResponse": {
      "type": "object",
      "properties": {
        "itsosmartcards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.ItsoSmartCardsDetails"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.ItsoSmartCardsDetails": {
      "type": "object",
      "properties": {
        "locationnlc": {
          "type": "string"
        },
        "userid": {
          "format": "int32",
          "type": "integer"
        },
        "windowstartdate": {
          "type": "string"
        },
        "windowperiod": {
          "format": "int32",
          "type": "integer"
        },
        "discountentitlement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.DiscountEntitlement"
          }
        },
        "remainingspace": {
          "format": "int32",
          "type": "integer"
        },
        "entitlement": {
          "enum": [
            "Adult",
            "Child"
          ],
          "type": "string"
        },
        "entitlementexpiry": {
          "format": "date-time",
          "type": "string"
        },
        "cardexpiry": {
          "format": "date-time",
          "type": "string"
        },
        "carddescription": {
          "type": "string"
        },
        "nameoncard": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Unknown",
            "Acknowledged",
            "Accepted",
            "Rejected",
            "Active",
            "Hotlisted",
            "Expired"
          ],
          "type": "string"
        },
        "concessionaryclass": {
          "enum": [
            "Adult",
            "Child",
            "Staff",
            "Scholar"
          ],
          "type": "string"
        },
        "isphotocardenabled": {
          "type": "boolean"
        },
        "isrn": {
          "type": "string"
        },
        "photocardid": {
          "type": "string"
        },
        "isdefault": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.PutItsoSmartCardsRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.PutItsoSmartCardsRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.PutItsoSmartCardsRequest": {
      "type": "object",
      "properties": {
        "isrn": {
          "type": "string"
        },
        "isdefault": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardPhotoResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardPhotoResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardPhotoResponse": {
      "type": "object",
      "properties": {
        "photodetailswithphoto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.PhotoDetailsWithPhoto"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.PhotoDetailsWithPhoto": {
      "type": "object",
      "properties": {
        "photoid": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "inuse": {
          "type": "boolean"
        },
        "statuschangedate": {
          "format": "date-time",
          "type": "string"
        },
        "photo": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.AddItsoSmartCardPhotoRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.AddItsoSmartCardPhotoRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.AddItsoSmartCardPhotoRequest": {
      "type": "object",
      "properties": {
        "photo": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.UpdateItsoSmartCardPhotoRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.UpdateItsoSmartCardPhotoRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.UpdateItsoSmartCardPhotoRequest": {
      "type": "object",
      "properties": {
        "photoid": {
          "format": "int32",
          "type": "integer"
        },
        "bookingreference": {
          "type": "string"
        },
        "tripid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.DeleteItsoSmartCardPhotoRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.DeleteItsoSmartCardPhotoRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.DeleteItsoSmartCardPhotoRequest": {
      "type": "object",
      "properties": {
        "photoid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.ApplyForItsoSmartCardRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.ApplyForItsoSmartCardRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.ApplyForItsoSmartCardRequest": {
      "type": "object",
      "properties": {
        "dateofbirth": {
          "format": "date-time",
          "type": "string"
        },
        "nameoncard": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "photoid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.ApplyForItsoSmartCardResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.ApplyForItsoSmartCardResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.ApplyForItsoSmartCardResponse": {
      "type": "object",
      "properties": {
        "basketmessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketMessage"
          }
        },
        "basketwatchdog": {
          "type": "string"
        },
        "errormessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tripno": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.TransferItsoSmartCardRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.TransferItsoSmartCardRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.TransferItsoSmartCardRequest": {
      "type": "object",
      "properties": {
        "transferemail": {
          "type": "string"
        },
        "isrn": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.DeregisterItsoSmartCardRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.DeregisterItsoSmartCardRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.DeregisterItsoSmartCardRequest": {
      "type": "object",
      "properties": {
        "isrn": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardTicketHistoryRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardTicketHistoryRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardTicketHistoryRequest": {
      "type": "object",
      "properties": {
        "isrn": {
          "type": "string"
        },
        "startdate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardTicketHistoryResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardTicketHistoryResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardTicketHistoryResponse": {
      "type": "object",
      "properties": {
        "smartcardproducthistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.SmartCardProductHistory"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.SmartCardProductHistory": {
      "type": "object",
      "properties": {
        "bookingreference": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "outwarddate": {
          "format": "date-time",
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "purchasedate": {
          "format": "date-time",
          "type": "string"
        },
        "tickettype": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardJourneyHistoryRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardJourneyHistoryRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardJourneyHistoryRequest": {
      "type": "object",
      "properties": {
        "isrn": {
          "type": "string"
        },
        "startdate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardJourneyHistoryResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardJourneyHistoryResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardJourneyHistoryResponse": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "ProductAdded",
            "ProductCancelled",
            "TapIn",
            "NewCardCreated",
            "TapOut",
            "CardWithdrawn",
            "ProductVoided"
          ],
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "productused": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardHistoryScheduleRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardHistoryScheduleRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardHistoryScheduleRequest": {
      "type": "object",
      "properties": {
        "isrn": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardHistoryScheduleResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardHistoryScheduleResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.GetItsoSmartCardHistoryScheduleResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "filetype": {
          "enum": [
            "Csv",
            "Pdf"
          ],
          "type": "string"
        },
        "isrn": {
          "type": "string"
        },
        "scheduledate": {
          "format": "date-time",
          "type": "string"
        },
        "scheduletype": {
          "enum": [
            "Weekly",
            "Montly"
          ],
          "type": "string"
        },
        "userid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Itso.SetItsoSmartCardHistoryScheduleRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Itso.SetItsoSmartCardHistoryScheduleRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Itso.SetItsoSmartCardHistoryScheduleRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "filetype": {
          "enum": [
            "Csv",
            "Pdf"
          ],
          "type": "string"
        },
        "isrn": {
          "type": "string"
        },
        "scheduletype": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetExpenseReceiptRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetExpenseReceiptRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetExpenseReceiptRequest": {
      "type": "object",
      "properties": {
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetExpenseReceiptResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetExpenseReceiptResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetExpenseReceiptResponse": {
      "type": "object",
      "properties": {
        "pdffilebase64": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetEticketPdfRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetEticketPdfRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetEticketPdfRequest": {
      "type": "object",
      "properties": {
        "tripid": {
          "format": "int32",
          "type": "integer"
        },
        "bookingreference": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetEticketPdfResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetEticketPdfResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Purchase.GetEticketPdfResponse": {
      "type": "object",
      "properties": {
        "pdffilebase64": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Customer.Card.PaymentCard]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Card.PaymentCard"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Card.PaymentCard": {
      "type": "object",
      "properties": {
        "cardtype": {
          "type": "string"
        },
        "cardname": {
          "type": "string"
        },
        "expirydate": {
          "type": "string"
        },
        "issuenumber": {
          "format": "int32",
          "type": "integer"
        },
        "maskedcardnumber": {
          "type": "string"
        },
        "securenumber": {
          "type": "string"
        },
        "startdate": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Customer.Card.DeletePaymentCardRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Customer.Card.DeletePaymentCardRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Customer.Card.DeletePaymentCardRequest": {
      "type": "object",
      "properties": {
        "securecardnumber": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Utils.Helpers.VersionInfo]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Utils.Helpers.VersionEntry"
          }
        }
      }
    },
    "Brunel.Utils.Helpers.VersionEntry": {
      "type": "object",
      "properties": {
        "headername": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Payment.InitiatePaymentCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Payment.InitiatePaymentCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Payment.InitiatePaymentCriteria": {
      "type": "object",
      "properties": {
        "successurl": {
          "type": "string"
        },
        "failureurl": {
          "type": "string"
        },
        "backurl": {
          "type": "string"
        },
        "device": {
          "enum": [
            "Desktop",
            "Mobile",
            "Tablet"
          ],
          "type": "string"
        },
        "isnrereferrer": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Payment.InitiatePaymentResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Payment.InitiatePaymentResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Payment.InitiatePaymentResponse": {
      "type": "object",
      "properties": {
        "paymenturl": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Payment.GetPaymentResultCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Payment.GetPaymentResultCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Payment.GetPaymentResultCriteria": {
      "type": "object",
      "properties": {
        "storagekey": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Payment.GetPaymentResultResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Payment.GetPaymentResultResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Payment.GetPaymentResultResponse": {
      "type": "object",
      "properties": {
        "orderid": {
          "type": "string"
        },
        "bookingreference": {
          "type": "string"
        },
        "basketmessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Basket.BasketMessage"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.CheckRemoteServiceAvailabilityResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.CheckRemoteServiceAvailabilityResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.CheckRemoteServiceAvailabilityResponse": {
      "type": "object",
      "properties": {
        "isavailable": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.RefundReasons]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.RefundReasons"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.RefundReasons": {
      "type": "object",
      "properties": {
        "isallowedautomaticrefunds": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "explainationmandatory": {
          "type": "boolean"
        },
        "isactive": {
          "type": "boolean"
        },
        "reasonid": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Request[Brunel.Integration.RetailHub.Dto.Rail.LocationsSearchCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.LocationsSearchCriteria"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.LocationsSearchCriteria": {
      "type": "object",
      "properties": {
        "locationcodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includealiases": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Rail.OutputLocation]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.OutputLocation"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Rail.RailCard]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.RailCard"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.RailCard": {
      "type": "object",
      "properties": {
        "railcardcode": {
          "type": "string"
        },
        "railcarddescription": {
          "type": "string"
        },
        "mustspecifynumber": {
          "type": "boolean"
        },
        "maxadults": {
          "format": "int32",
          "type": "integer"
        },
        "minadults": {
          "format": "int32",
          "type": "integer"
        },
        "maxchildren": {
          "format": "int32",
          "type": "integer"
        },
        "minchildren": {
          "format": "int32",
          "type": "integer"
        },
        "dateeffectivefrom": {
          "format": "date-time",
          "type": "string"
        },
        "dateeffectiveto": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.TicketTypesCriteria": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "Main",
            "Season"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Rail.TicketType]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.TicketType"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.TicketType": {
      "type": "object",
      "properties": {
        "tickettypecode": {
          "type": "string"
        },
        "tickettypedescription": {
          "type": "string"
        },
        "ticketclass": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "mandatoryreservation": {
          "type": "string"
        },
        "termsandconditions": {
          "type": "string"
        },
        "dateeffectivefrom": {
          "format": "date-time",
          "type": "string"
        },
        "dateeffectiveto": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.TermsAndCondition]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.TermsAndCondition"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.TermsAndCondition": {
      "type": "object",
      "properties": {
        "availability": {
          "type": "string"
        },
        "bookingdeadline": {
          "type": "string"
        },
        "breakjourney": {
          "type": "string"
        },
        "changes": {
          "type": "string"
        },
        "conditions": {
          "type": "string"
        },
        "discounts": {
          "type": "string"
        },
        "refunds": {
          "type": "string"
        },
        "sleepers": {
          "type": "string"
        },
        "ticketdescription": {
          "type": "string"
        },
        "ticketname": {
          "type": "string"
        },
        "trainoperator": {
          "type": "string"
        },
        "validity": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.DateResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.DateResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.DateResponse": {
      "type": "object",
      "properties": {
        "defaultoutward": {
          "format": "date-time",
          "type": "string"
        },
        "defaultreturn": {
          "format": "date-time",
          "type": "string"
        },
        "earliestavailable": {
          "format": "date-time",
          "type": "string"
        },
        "latestavailable": {
          "format": "date-time",
          "type": "string"
        },
        "bankholidaydates": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.BankHolidayDates"
        },
        "extendedperiodlatestavailable": {
          "format": "date-time",
          "type": "string"
        },
        "ticketreleasenotificationdates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.NotificationDateTime"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.BankHolidayDates": {
      "type": "object",
      "properties": {
        "datetime": {
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.NotificationDateTime": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "mode": {
          "enum": [
            "Release",
            "Extend",
            "Exclude",
            "Suspend",
            "ExtendRelease",
            "ExtendExclude",
            "None"
          ],
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.JourneysCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.JourneysCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.JourneysCriteria": {
      "type": "object",
      "properties": {
        "locfrom": {
          "type": "string"
        },
        "locto": {
          "type": "string"
        },
        "changeat": {
          "type": "string"
        },
        "enquirymethod": {
          "type": "string"
        },
        "campaign": {
          "type": "string"
        },
        "showservices": {
          "type": "boolean"
        },
        "oneway": {
          "type": "boolean"
        },
        "openreturn": {
          "type": "boolean"
        },
        "timetableonly": {
          "type": "boolean"
        },
        "outwarddepartafter": {
          "type": "boolean"
        },
        "returndepartafter": {
          "type": "boolean"
        },
        "avoid": {
          "type": "string"
        },
        "via": {
          "type": "string"
        },
        "firstclass": {
          "type": "boolean"
        },
        "standardclass": {
          "type": "boolean"
        },
        "passengergroup": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.PassengerGroup"
            }
          }
        },
        "originalfareid": {
          "type": "string"
        },
        "directservicesonly": {
          "type": "boolean"
        },
        "isseasonticket": {
          "type": "boolean"
        },
        "annual": {
          "type": "boolean"
        },
        "custom": {
          "type": "boolean"
        },
        "monthly": {
          "type": "boolean"
        },
        "weekly": {
          "type": "boolean"
        },
        "smartcardfaresonly": {
          "type": "boolean"
        },
        "promotion": {
          "type": "string"
        },
        "datetimedepart": {
          "format": "date-time",
          "type": "string"
        },
        "datetimereturn": {
          "format": "date-time",
          "type": "string"
        },
        "overtakentrainindicator": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.PassengerGroup": {
      "type": "object",
      "properties": {
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        },
        "numberofrailcards": {
          "format": "int32",
          "type": "integer"
        },
        "originalfareid": {
          "type": "string"
        },
        "railcardcode": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Rail.Journeys]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "sessiontoken": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Journeys"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Journeys": {
      "type": "object",
      "properties": {
        "details": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.JourneysDetails"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Service"
          }
        },
        "_options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fares": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.FareDetail"
          }
        },
        "routes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Route"
          }
        },
        "faregroups": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.FareGroup"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.OutputLocation"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.JourneysDetails": {
      "type": "object",
      "properties": {
        "complete": {
          "type": "boolean"
        },
        "enquiryid": {
          "type": "string"
        },
        "isloggedon": {
          "type": "boolean"
        },
        "ischangeofjourney": {
          "type": "boolean"
        },
        "isreturn": {
          "type": "boolean"
        },
        "directservicesonly": {
          "type": "boolean"
        },
        "requestedorigin": {
          "type": "string"
        },
        "requestedoriginnlc": {
          "type": "string"
        },
        "requesteddestination": {
          "type": "string"
        },
        "requesteddestinationnlc": {
          "type": "string"
        },
        "outwarddatetime": {
          "format": "date-time",
          "type": "string"
        },
        "outwarddepartafter": {
          "type": "boolean"
        },
        "returndatetime": {
          "format": "date-time",
          "type": "string"
        },
        "returndepartafter": {
          "type": "boolean"
        },
        "multiplepassengers": {
          "type": "boolean"
        },
        "passengercount": {
          "format": "int32",
          "type": "integer"
        },
        "nrsunavailable": {
          "type": "boolean"
        },
        "numberofchildren": {
          "format": "int32",
          "type": "integer"
        },
        "numberofadults": {
          "format": "int32",
          "type": "integer"
        },
        "isselectable": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.FareDetail": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "routecode": {
          "type": "string"
        },
        "tickettype": {
          "type": "string"
        },
        "fareorignlc": {
          "type": "string"
        },
        "faredestnlc": {
          "type": "string"
        },
        "railcard": {
          "type": "string"
        },
        "numberofadults": {
          "format": "int32",
          "type": "integer"
        },
        "numberofchilden": {
          "format": "int32",
          "type": "integer"
        },
        "totaladultfare": {
          "format": "int32",
          "type": "integer"
        },
        "totalchildfare": {
          "format": "int32",
          "type": "integer"
        },
        "adultfare": {
          "format": "int32",
          "type": "integer"
        },
        "childfare": {
          "format": "int32",
          "type": "integer"
        },
        "totalfare": {
          "format": "int32",
          "type": "integer"
        },
        "loyaltypoints": {
          "format": "int32",
          "type": "integer"
        },
        "loyaltypointsforfare": {
          "format": "int32",
          "type": "integer"
        },
        "pointsquantity": {
          "format": "int32",
          "type": "integer"
        },
        "permittedlocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isoutwardgroupstation": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "termsconditions": {
          "type": "string"
        },
        "fareclass": {
          "type": "string"
        },
        "xlondon": {
          "type": "boolean"
        },
        "discounted": {
          "type": "boolean"
        },
        "promotional": {
          "type": "boolean"
        },
        "sleepertype": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Route": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isqueried": {
          "type": "boolean"
        },
        "datevalidfrom": {
          "type": "string"
        },
        "datevalidto": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.FareGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "out": {
          "type": "boolean"
        },
        "routecode": {
          "type": "string"
        },
        "onlc": {
          "type": "string"
        },
        "dnlc": {
          "type": "string"
        },
        "fareorigin": {
          "type": "string"
        },
        "faredestination": {
          "type": "string"
        },
        "isdiscounted": {
          "type": "boolean"
        },
        "ispromoservice": {
          "type": "boolean"
        },
        "ishighlightpromotion": {
          "type": "boolean"
        },
        "mandres": {
          "type": "string"
        },
        "brieftsandcs": {
          "type": "string"
        },
        "keytsandcs": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "flex": {
          "type": "string"
        },
        "fclass": {
          "type": "string"
        },
        "isreturn": {
          "type": "boolean"
        },
        "minfare": {
          "type": "string"
        },
        "maxfare": {
          "type": "string"
        },
        "multiroutes": {
          "type": "string"
        },
        "isdisabled": {
          "type": "boolean"
        },
        "iscarnet": {
          "type": "boolean"
        },
        "isexpiredrailcard": {
          "type": "boolean"
        },
        "isbidirectional": {
          "type": "boolean"
        },
        "issinglebidirectional": {
          "type": "boolean"
        },
        "numcarnetjourneys": {
          "type": "string"
        },
        "isgroupsaveincluded": {
          "type": "boolean"
        },
        "moreinfourl": {
          "type": "string"
        },
        "isflexiseason": {
          "type": "boolean"
        },
        "numflexiseasonpasses": {
          "type": "string"
        },
        "nectarloyaltypointsforticket": {
          "type": "string"
        },
        "nectarloyaltypointsforfirstclassupgrade": {
          "type": "string"
        },
        "nectarloyaltypointsforflexibilitytradeupupgrade": {
          "type": "string"
        },
        "isnectarmaxlimitreachedforfirstclassupgrade": {
          "type": "boolean"
        },
        "isnectarmaxlimitreachedforflexibilityupgrade": {
          "type": "boolean"
        },
        "isnectarmaxlimitreachedfortickettype": {
          "type": "boolean"
        },
        "isstandardruleapplicablefortickettype": {
          "type": "boolean"
        },
        "isstandardruleapplicableforfirstclassupgrade": {
          "type": "boolean"
        },
        "isstandardruleapplicableforflexibilitytradeup": {
          "type": "boolean"
        },
        "nectarloyaltytickettyperuleid": {
          "type": "string"
        },
        "nectarloyaltyfirstclassupgraderuleid": {
          "type": "string"
        },
        "nectarloyaltyflexibilitytradeupruleid": {
          "type": "string"
        },
        "tickettyperuleremaininglimit": {
          "type": "string"
        },
        "firstclassruleremaininglimit": {
          "type": "string"
        },
        "flexibilityruleremaininglimit": {
          "type": "string"
        },
        "isflyingclubandnectarruleapplicableforfare": {
          "type": "boolean"
        },
        "minpoints": {
          "type": "string"
        },
        "maxpoints": {
          "type": "string"
        },
        "sclass": {
          "type": "string"
        },
        "isweekly": {
          "type": "boolean"
        },
        "ismonthly": {
          "type": "boolean"
        },
        "isannual": {
          "type": "boolean"
        },
        "custom": {
          "type": "string"
        },
        "enddate": {
          "format": "date-time",
          "type": "string"
        },
        "isshowservices": {
          "type": "boolean"
        },
        "issmartcardfare": {
          "type": "boolean"
        },
        "isschemediscountfare": {
          "type": "boolean"
        },
        "upgradefaregroupid": {
          "type": "string"
        },
        "flexibilitytradeupfaregroupid": {
          "type": "string"
        },
        "faretoccode": {
          "type": "string"
        },
        "serviceids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fareids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.JourneysExtendCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.JourneysExtendCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.JourneysExtendCriteria": {
      "type": "object",
      "properties": {
        "direction": {
          "enum": [
            "Later",
            "Earlier"
          ],
          "type": "string"
        },
        "journeydirection": {
          "enum": [
            "Outward",
            "Return",
            "Both"
          ],
          "type": "string"
        },
        "extendtimetable": {
          "type": "boolean"
        },
        "fareclasses": {
          "type": "string"
        },
        "openreturn": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.Journeys]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Journeys"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.JourneyDetailsCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.JourneyDetailsCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.JourneyDetailsCriteria": {
      "type": "object",
      "properties": {
        "uid": {
          "format": "int32",
          "type": "integer"
        },
        "enquiryid": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[System.Collections.Generic.IEnumerable[Brunel.Integration.RetailHub.Dto.Rail.RailJourneyDetail]]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.RailJourneyDetail"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.RailJourneyDetail": {
      "type": "object",
      "properties": {
        "org": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "rid": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "traindestination": {
          "type": "string"
        },
        "facilities": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Facilities"
        },
        "callpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.RailJourneyStop"
          }
        },
        "locfrom": {
          "type": "string"
        },
        "datetimefrom": {
          "format": "date-time",
          "type": "string"
        },
        "locto": {
          "type": "string"
        },
        "datetimeto": {
          "format": "date-time",
          "type": "string"
        },
        "onlc": {
          "type": "string"
        },
        "modetype": {
          "type": "string"
        },
        "dnlc": {
          "type": "string"
        },
        "tocdesc": {
          "type": "string"
        },
        "haslongconnection": {
          "type": "boolean"
        },
        "isservicedisrupted": {
          "type": "boolean"
        },
        "snlc": {
          "type": "string"
        },
        "enlc": {
          "type": "string"
        },
        "bclass": {
          "type": "string"
        },
        "disruptioninfo": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Disruption"
        },
        "iscancelled": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Facilities": {
      "type": "object",
      "properties": {
        "showwifi": {
          "type": "boolean"
        },
        "trolley": {
          "type": "boolean"
        },
        "sclass": {
          "type": "string"
        },
        "reservation": {
          "type": "string"
        },
        "buffetcar": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.RailJourneyStop": {
      "type": "object",
      "properties": {
        "leg": {
          "type": "string"
        },
        "station": {
          "type": "string"
        },
        "datetimearrival": {
          "format": "date-time",
          "type": "string"
        },
        "datetimedepart": {
          "format": "date-time",
          "type": "string"
        },
        "servicelocationkey": {
          "type": "string"
        },
        "stoptype": {
          "type": "string"
        },
        "requeststop": {
          "type": "boolean"
        },
        "expecteddatetime": {
          "format": "date-time",
          "type": "string"
        },
        "notstopping": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchCriteria": {
      "type": "object",
      "properties": {
        "originnlc": {
          "type": "string"
        },
        "destinationnlc": {
          "type": "string"
        },
        "outwarddatetime": {
          "format": "date-time",
          "type": "string"
        },
        "outwarddepartafter": {
          "type": "boolean"
        },
        "isreturn": {
          "type": "boolean"
        },
        "isopenreturn": {
          "type": "boolean"
        },
        "returndatetime": {
          "format": "date-time",
          "type": "string"
        },
        "returndepartafter": {
          "type": "boolean"
        },
        "directservicesonly": {
          "type": "boolean"
        },
        "firstclass": {
          "type": "boolean"
        },
        "standardclass": {
          "type": "boolean"
        },
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        },
        "avoid": {
          "type": "string"
        },
        "via": {
          "type": "string"
        },
        "promotion": {
          "type": "string"
        },
        "railcards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.RailcardCriteria"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.RailcardCriteria": {
      "type": "object",
      "properties": {
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedResponse[Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchResult]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "sessiontoken": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchResult"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchResult": {
      "type": "object",
      "properties": {
        "searchquery": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchCriteria"
        },
        "searchid": {
          "type": "string"
        },
        "changeofjourney": {
          "type": "boolean"
        },
        "outwardservices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.SimpleService"
          }
        },
        "returnservices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.SimpleService"
          }
        },
        "information": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.OutputLocation"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.SimpleService": {
      "type": "object",
      "properties": {
        "serviceid": {
          "format": "int32",
          "type": "integer"
        },
        "originnlc": {
          "type": "string"
        },
        "origindescription": {
          "type": "string"
        },
        "destinationnlc": {
          "type": "string"
        },
        "destinationdescription": {
          "type": "string"
        },
        "arrivaldatetime": {
          "format": "date-time",
          "type": "string"
        },
        "departuredatetime": {
          "format": "date-time",
          "type": "string"
        },
        "changes": {
          "format": "int32",
          "type": "integer"
        },
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "firstinday": {
          "type": "boolean"
        },
        "lastinday": {
          "type": "boolean"
        },
        "isservicedisrupted": {
          "type": "boolean"
        },
        "warnings": {
          "type": "array",
          "items": {
            "enum": [
              "Bus",
              "Disruption",
              "Warning"
            ],
            "type": "string"
          }
        },
        "flags": {
          "type": "array",
          "items": {
            "enum": [
              "Sleeper",
              "Cheapest",
              "GroupSave",
              "SlowTrain",
              "GWRSleeper"
            ],
            "type": "string"
          }
        },
        "journeydetailsuri": {
          "type": "string"
        },
        "cheapestfareselection": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.CheapestFareSelection"
        },
        "cheapestfareselectionfirstclass": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.CheapestFareSelection"
        },
        "otherfaregroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.SimpleFare"
          }
        },
        "servicelegs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Leg"
          }
        },
        "carbonfootprintcalculation": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.CarbonFootprintCalculation"
        },
        "cancelledleg": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.CheapestFareSelection": {
      "type": "object",
      "properties": {
        "single": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.FareCostInformation"
        },
        "return": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.FareCostInformation"
        },
        "cheapest": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.FareCostInformation",
          "readOnly": true
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.SimpleFare": {
      "type": "object",
      "properties": {
        "faregroupid": {
          "type": "string"
        },
        "faregroupname": {
          "type": "string"
        },
        "isreturn": {
          "type": "boolean"
        },
        "isgroupsaveincluded": {
          "type": "boolean"
        },
        "ispromoservice": {
          "type": "boolean"
        },
        "ishighlightpromotion": {
          "type": "boolean"
        },
        "isstandardruleapplicablefortickettype": {
          "type": "boolean"
        },
        "upgdarefaregroupid": {
          "type": "string"
        },
        "class": {
          "type": "string"
        },
        "destinationinfo": {
          "type": "string"
        },
        "routedescription": {
          "type": "string"
        },
        "returntermsandconfitions": {
          "type": "string"
        },
        "infourl": {
          "type": "string"
        },
        "availablespaces": {
          "format": "int32",
          "type": "integer"
        },
        "cost": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.FareCost"
        },
        "flags": {
          "type": "array",
          "items": {
            "enum": [
              "Sleeper",
              "SleeperOptional",
              "Cheapest",
              "GroupSave"
            ],
            "type": "string"
          }
        },
        "railcards": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nectarpoints": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.NectarPoints"
        },
        "permittedlocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "issmartcardfare": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.FareCostInformation": {
      "type": "object",
      "properties": {
        "singlefaregroupid": {
          "type": "string"
        },
        "returnfaregroup": {
          "type": "string"
        },
        "singlefarecost": {
          "format": "int32",
          "type": "integer"
        },
        "returnfarecost": {
          "format": "int32",
          "type": "integer"
        },
        "issmartcardfare": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.NectarPoints": {
      "type": "object",
      "properties": {
        "ticket": {
          "format": "int32",
          "type": "integer"
        },
        "bonus": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchExtendCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchExtendCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchExtendCriteria": {
      "type": "object",
      "properties": {
        "searchid": {
          "type": "string"
        },
        "searchquery": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchCriteria"
        },
        "direction": {
          "enum": [
            "Later",
            "Earlier"
          ],
          "type": "string"
        },
        "journeydirection": {
          "enum": [
            "Outward",
            "Return",
            "Both"
          ],
          "type": "string"
        },
        "extendtimetable": {
          "type": "boolean"
        },
        "fareclasses": {
          "type": "string"
        },
        "openreturn": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchResult]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.JourneysSearchResult"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.MultiDaySummaryCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.MultiDaySummaryCriteria"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.MultiDaySummaryCriteria": {
      "type": "object",
      "properties": {
        "locfrom": {
          "type": "string"
        },
        "locto": {
          "type": "string"
        },
        "datetimefrom": {
          "format": "date-time",
          "type": "string"
        },
        "datetimeto": {
          "format": "date-time",
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "promotion": {
          "type": "string"
        },
        "passengergroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.PassengerGroup"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.MultiDaySummaryResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.MultiDaySummaryResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.MultiDaySummaryResponse": {
      "type": "object",
      "properties": {
        "enquiryid": {
          "type": "string"
        },
        "daysummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.DaySummary"
          }
        },
        "complete": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.DaySummary": {
      "type": "object",
      "properties": {
        "cheapestfirst": {
          "type": "string"
        },
        "cheapestfirstcachedatetime": {
          "format": "date-time",
          "type": "string"
        },
        "cheapeststandard": {
          "type": "string"
        },
        "cheapeststandardcachedatetime": {
          "format": "date-time",
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "destinationnlc": {
          "type": "string"
        },
        "originnlc": {
          "type": "string"
        },
        "hasnoquota": {
          "type": "boolean"
        },
        "isdiscounted": {
          "type": "boolean"
        },
        "ispromotional": {
          "type": "boolean"
        },
        "ischeapest": {
          "type": "boolean"
        },
        "pricecheapest": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.AuthenticatedRequest[Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneyCheckRequest]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneyCheckRequest"
        },
        "sessiontoken": {
          "type": "string"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneyCheckRequest": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "locfrom": {
          "type": "string"
        },
        "locto": {
          "type": "string"
        },
        "departuredatetime": {
          "format": "date-time",
          "type": "string"
        },
        "arrivaldatetime": {
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "lowestprice": {
          "format": "int32",
          "type": "integer"
        },
        "passengergroup": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.PassengerGroup"
            }
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneyCheckResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneyCheckResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneyCheckResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "journeys": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Journeys"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Request[Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneysCriteria]": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneysCriteria"
        },
        "mock": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneysCriteria": {
      "type": "object",
      "properties": {
        "locfrom": {
          "type": "string"
        },
        "locto": {
          "type": "string"
        },
        "searchdate": {
          "format": "date-time",
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "passengergroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.PassengerGroup"
          }
        },
        "lowestprice": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneysResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneysResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.MultidayJourneysResponse": {
      "type": "object",
      "properties": {
        "journeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.RailJourneySummary"
          }
        },
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Route"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.RailJourneySummary": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "locfrom": {
          "type": "string"
        },
        "locto": {
          "type": "string"
        },
        "datetimefrom": {
          "format": "date-time",
          "type": "string"
        },
        "datetimeto": {
          "format": "date-time",
          "type": "string"
        },
        "changes": {
          "format": "int32",
          "type": "integer"
        },
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "islongconnectiontimewarning": {
          "type": "boolean"
        },
        "isdisrupted": {
          "type": "boolean"
        },
        "retailtrainids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "warning": {
          "type": "boolean"
        },
        "indicator": {
          "type": "string"
        },
        "out": {
          "type": "boolean"
        },
        "routecode": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "railjourneydetail": {
          "type": "string"
        },
        "fares": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cheapfares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.CheapFare"
          }
        },
        "nrenotices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.NreNotice"
          }
        },
        "isdepartureexpectedtime": {
          "type": "boolean"
        },
        "isarrivalexpectedtime": {
          "type": "boolean"
        },
        "ispartcancelled": {
          "type": "boolean"
        },
        "isservicecancelled": {
          "type": "boolean"
        },
        "isovertaken": {
          "type": "boolean"
        },
        "isbus": {
          "type": "boolean"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.CheapFare": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "totalfare": {
          "type": "string"
        },
        "tickettypecode": {
          "type": "string"
        },
        "tickettypedescription": {
          "type": "string"
        },
        "availability": {
          "format": "int32",
          "type": "integer"
        },
        "isdiscounted": {
          "type": "boolean"
        },
        "isgroupsave": {
          "type": "boolean"
        },
        "ressoldout": {
          "type": "boolean"
        },
        "ispromotional": {
          "type": "boolean"
        },
        "isoutwardgrouploc": {
          "type": "boolean"
        },
        "locfrom": {
          "type": "string"
        },
        "locto": {
          "type": "string"
        },
        "routecode": {
          "type": "string"
        },
        "lastchecked": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Response[Brunel.Integration.RetailHub.Dto.Rail.MultidayFlowsResponse]": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.MultidayFlowsResponse"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.MultidayFlowsResponse": {
      "type": "object",
      "properties": {
        "multidayflow": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.MultidayFlow"
          }
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.MultidayFlow": {
      "type": "object",
      "properties": {
        "fromnlc": {
          "type": "string"
        },
        "tonlc": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.Nre.NreSearchRequest": {
      "type": "object",
      "properties": {
        "requestid": {
          "type": "string"
        },
        "purchaseticketrepsonserequestid": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "outwardtime": {
          "format": "date-time",
          "type": "string"
        },
        "outwarddeparture": {
          "format": "date-time",
          "type": "string"
        },
        "outwardarrival": {
          "format": "date-time",
          "type": "string"
        },
        "inwardtime": {
          "format": "date-time",
          "type": "string"
        },
        "inwarddeparture": {
          "format": "date-time",
          "type": "string"
        },
        "inwardarrival": {
          "format": "date-time",
          "type": "string"
        },
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        },
        "railcards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.Nre.Railcard"
          }
        },
        "options": {
          "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.Nre.JourneyOptions"
        },
        "faregroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brunel.Integration.RetailHub.Dto.Rail.Search.Nre.FareGroup"
          }
        },
        "baskettotal": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.Nre.Railcard": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.Nre.JourneyOptions": {
      "type": "object",
      "properties": {
        "fareclass": {
          "type": "string"
        },
        "fastesttrainsonly": {
          "type": "boolean"
        },
        "sleepertrainsonly": {
          "type": "boolean"
        },
        "directtrainsonly": {
          "type": "boolean"
        },
        "searchtype": {
          "type": "string"
        },
        "via": {
          "type": "string"
        },
        "notvia": {
          "type": "string"
        }
      }
    },
    "Brunel.Integration.RetailHub.Dto.Rail.Search.Nre.FareGroup": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "direction": {
          "type": "string"
        }
      }
    }
  }
}
